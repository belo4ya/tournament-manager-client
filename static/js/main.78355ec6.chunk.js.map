{"version":3,"sources":["utils/constants.js","components/PageSelector/PageSelector.js","components/Button/index.js","components/Button/Button.js","assets/logo_placeholder.svg","components/tournaments/TournamentCard.js","components/tournaments/TournamentItem.js","components/tournaments/TournamentsStaticTable.js","hooks/useStore.js","pages/main/Main.js","components/OnPageNavigation/OnPageNavigation.js","components/teams/TeamCard.js","components/teams/TeamsRow.js","pages/profile/Profile.js","assets/icn_search.svg","components/Search/Search.js","components/teams/TeamsTable.js","pages/profile-teams/ProfileTeams.js","components/MyInputRange/MyInputRange.js","assets/icn_pencil.svg","assets/icn_cross.svg","components/tournaments/EditableTournamentItem.js","components/Alert/AlertBody.js","utils/utils.js","components/tournaments/TournamentsDynamicTable.js","components/Checkbox/Checkbox.js","components/Checkbox/CheckboxList.js","pages/profile-tournaments/ProfileTournaments.js","components/Input/Input.js","components/Checkbox/ChoiceBoxList.js","http/index.js","http/authorized.js","pages/tournament-creation/TournamentCreation.js","pages/about/About.js","pages/creator/Creator.js","components/Bracket/Bracket.js","routes.js","pages/tournament/Tournament.js","components/AppRouter.js","components/Logo/index.js","components/Navigation/Navigation.js","components/Header/Header.js","components/Footer/Footer.js","components/Alert/Alert.js","components/ScrollToTop/ScrollToTop.js","components/Form/Form.js","components/Modal/Modal.js","pages/sign-in/SignIn.js","pages/sign-up/SignUp.js","components/Form/TeamForm.js","http/api.js","pages/team-creation/TeamCreation.js","App.js","store/user.js","store/tournaments.js","store/modals.js","store/index.js","index.js"],"names":["INDEX_ROUTE","ABOUT_ROUTE","CREATOR_ROUTE","PROFILE_ROUTE","PROFILE_TOURNAMENTS_ROUTE","PROFILE_TEAMS_ROUTE","TOURNAMENT_CREATION_ROUTE","PageSelector","props","className","onClick","onPrevPage","page","onNextPage","Button","class","join","event","preventDefault","children","TournamentCard","src","logo","placeholder","alt","onError","e","target","onerror","name","bracketType","totalTeams","date","TournamentItem","id","observer","history","useHistory","tournaments","map","t","useStore","useContext","StoreContext","userStore","tournamentStore","modalStore","useEffect","document","title","isAuth","push","modalPages","signUp","open","number","OnPageNavigation","teamCreation","TeamCard","rating","teams","load","user","previewTournamentStore","previewTeamStore","username","createdDate","type","value","onChange","onSubmit","search","currentPage","prevPage","nextPage","pageableTeamStore","length","setValue","apply","maxValue","minValue","step","EditableTournamentItem","onEdit","pencil","onDelete","cross","header","handleClose","alert","close","content","actions","ok","text","cancel","alertWarning","body","store","alertError","toString","alertMessage","message","toDate","string","split","time","Date","compare","a","b","reverse","useState","nameFilter","state","priority","comparator","toLowerCase","teamsFilter","createdDateFilter","filters","setFilters","onMouseDown","onDoubleClick","arrowPos","managePriority","otherFilters","sortWithPriority","tournament","action","context","next","Math","max","el","forEach","filter","f","sort","slice","0","1","2","Checkbox","checked","htmlFor","checkboxList","checkbox","handleClick","pageableTournamentStore","MAX_RANGE_VALUE","MIN_RANGE_VALUE","RANGE_STEP","range","min","label","inputStyle","disabled","ChoiceBoxList","Object","keys","choiceBoxList","key","$host","axios","create","baseURL","process","$authHost","interceptors","request","use","config","headers","Authorization","localStorage","getItem","fetchData","url","params","get","then","response","data","catch","status","fetchTournamentTypes","_embedded","bracketTypes","fetchAllTeams","size","totalPages","i","createTournament","post","fetchOneTournament","TournamentCreation","setName","format","setFormat","random","fifo","seed","setSeed","participants","setParticipants","setTeams","reduce","isValidTournamentName","isValidParticipantsNumber","options","selected","maxMenuHeight","isMulti","closeMenuOnSelect","classNamePrefix","seedType","s","p","About","Creator","Bracket","bracketClassName","rounds","renderSeedComponent","RenderSeed","roundTitleComponent","RenderTitle","roundIndex","breakpoint","mobileBreakpoint","score","authRoutes","path","Component","Main","Profile","ProfileTournaments","ProfileTeams","useParams","console","log","seeds","publicRoutes","component","exact","to","Logo","signIn","leftButton","rightButton","signOut","Footer","style","overlay","display","alignItems","justifyContent","position","inset","padding","borderRadius","isOpen","onRequestClose","withRouter","unlisten","listen","window","scrollTo","image","fields","field","forgotPassword","href","handleSubmit","authText","isValid","login","password","rePassword","apiCall","this","authHost","host","userData","jwtDecode","token","setItem","sub","roles","role","projection","_makeRequest","lastModifiedDate","types","start","end","teamName","team","setRating","isValidRating","isValidName","createTeam","parseInt","replace","isNaN","isChecking","basename","model","identifierNumber","Team","maybeNull","self","getRoot","teamEditing","Tournament","array","bracket","Page","totalElements","Search","isApplied","getParent","Range","Filter","maybe","isLoading","flow","afterCreate","PageableTeamStore","targetPage","fetchUserFilteredTeams","PageableTournamentStore","optional","fetchUserFilteredTournaments","PreviewTeamStore","fetchUserTeams","PreviewTournamentStore","fetchUserTournaments","User","UserStore","boolean","fetchUserData","updateUserData","checkSession","TournamentStore","fetchPublicTournaments","TeamModal","SimpleCredit","views","SignUp","SignIn","ModalPagesStore","Alert","ModalStore","RootStore","Modal","setAppElement","createContext","ReactDOM","render","Provider","getElementById"],"mappings":"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","file":"static/js/main.78355ec6.chunk.js","sourcesContent":["export const INDEX_ROUTE = '/';\nexport const ABOUT_ROUTE = '/about';\nexport const CREATOR_ROUTE = '/creator';\n\nexport const SIGN_IN_ROUTE = '/auth/signIn';\nexport const SIGN_UP_ROUTE = '/auth/signUp';\n\nexport const PROFILE_ROUTE = '/profile';\nexport const PROFILE_TOURNAMENTS_ROUTE = '/profile/tournaments';\nexport const PROFILE_TEAMS_ROUTE = '/profile/teams';\n\nexport const TOURNAMENT_CREATION_ROUTE = '/profile/createTournament';\nexport const TEAM_CREATION_ROUTE = '/profile/createTeam';","import './page-selector.scss'\n\nimport React from 'react';\n\nconst PageSelector = (props) => {\n    return (\n        <div className=\"page-selector\">\n            <button className=\"arrow\" onClick={props.onPrevPage}>←</button>\n            <div className=\"current-page\">{props.page}</div>\n            <button className=\"arrow\" onClick={props.onNextPage}>→</button>\n        </div>\n    );\n};\n\nexport default PageSelector;","import Button from \"./Button\";\nexport default Button;","import './button.scss'\n\nimport React from 'react';\n\nconst Button = (props) => {\n    return (\n        <button\n            className={[\"button\", props.class].join(\" \")}\n            onClick={(event) => {\n                event.preventDefault()\n                props.onClick(event)\n            }}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/logo_placeholder.69f12f78.svg\";","import \"./tournaments.scss\";\nimport placeholder from '../../assets/logo_placeholder.svg'\n\nimport React from 'react';\n\nconst TournamentCard = (props) => {\n    return (\n        <div className=\"tournament-card\" onClick={props.onClick}>\n            <div className=\"title-container\">\n                <img\n                    src={props.logo || placeholder}\n                    alt=\"\"\n                    onError={(e) => {\n                        e.target.onerror = null\n                        e.target.src = placeholder\n                    }}\n                />\n                <div>\n                    <h5>{props.name}</h5>\n                    <span className=\"subtitle\">{props.bracketType}</span>\n                </div>\n            </div>\n            <div className=\"teams\">\n                <h5>{props.totalTeams}</h5>\n                <span className=\"subtitle\">Teams</span>\n            </div>\n            <div className=\"date\">{props.date}</div>\n        </div>\n    );\n};\n\nexport default TournamentCard;","import React from 'react';\nimport TournamentCard from \"./TournamentCard\";\n\nconst TournamentItem = (props) => {\n    return (\n        <div className=\"tournament-item\">\n            <TournamentCard\n                id={props.id}\n                logo={props.logo}\n                name={props.name}\n                bracketType={props.bracketType}\n                totalTeams={props.totalTeams}\n                date={props.date}\n                onClick={props.onClick}\n            />\n        </div>\n    );\n};\n\nexport default TournamentItem;","import './tournaments.scss'\n\nimport React from 'react';\nimport TournamentItem from \"./TournamentItem\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\n\nconst TournamentsStaticTable = (props) => {\n    const history = useHistory()\n\n    return (\n        <div>\n            {props.tournaments.map(t =>\n                <TournamentItem\n                    key={t.id}\n                    logo={t.logo}\n                    name={t.name}\n                    bracketType={t.bracketType}\n                    totalTeams={t.totalTeams}\n                    date={t.date}\n                    onClick={() => t.onClick?.(history)}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default observer(TournamentsStaticTable);","import {useContext} from \"react\";\nimport {StoreContext} from \"../index\";\n\nexport default function useStore() {\n    return useContext(StoreContext)\n}","import './main.scss'\n\nimport React, {useEffect} from 'react';\nimport PageSelector from \"../../components/PageSelector/PageSelector\";\nimport Button from \"../../components/Button\"\nimport TournamentsStaticTable from \"../../components/tournaments/TournamentsStaticTable\";\nimport {useHistory} from 'react-router-dom'\nimport {PROFILE_ROUTE} from \"../../utils/constants\";\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\n\n\nconst Main = () => {\n    const history = useHistory()\n    const {userStore, tournamentStore, modalStore} = useStore()\n\n    const onNextPage = () => {\n        tournamentStore.onNextPage()\n    }\n\n    const onPrevPage = () => {\n        tournamentStore.onPrevPage()\n    }\n\n    const handleTryButton = () => {\n        if (userStore.isAuth) {\n            history.push(PROFILE_ROUTE)\n        } else {\n            modalStore.modalPages.signUp.open()\n        }\n    }\n\n    useEffect(() => {\n        document.title = 'Генератор турнирных сеток и таблиц'\n    }, [])\n\n    return (\n        <div>\n            <section className=\"section-header\">\n                <div className=\"container\">\n                    <div className=\"content\">\n                        <h1>Генератор турнирных сеток и таблиц</h1>\n                        <Button class=\"black main\" onClick={handleTryButton}>Попробовать</Button>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"section-main\">\n                <div className=\"container\">\n                    <div className=\"tournaments-sheet\">\n                        <div className=\"title\">\n                            <h2>Последние турниры</h2>\n                        </div>\n                        <div className=\"tournaments\">\n                            <TournamentsStaticTable tournaments={tournamentStore.tournaments}/>\n                            <PageSelector page={tournamentStore.page.number + 1} onPrevPage={onPrevPage} onNextPage={onNextPage}/>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n};\n\nexport default observer(Main);","import \"./on-page-navigation.scss\"\n\nimport React from 'react';\nimport Button from \"../Button\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    PROFILE_ROUTE,\n    PROFILE_TEAMS_ROUTE,\n    PROFILE_TOURNAMENTS_ROUTE,\n    TOURNAMENT_CREATION_ROUTE\n} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\nconst OnPageNavigation = observer(() => {\n    const history = useHistory()\n    const {modalStore} = useStore()\n    const teamCreation = modalStore.modalPages.teamCreation\n\n    const handleCreateTournamentButton = () => {\n        history.push(TOURNAMENT_CREATION_ROUTE)\n    }\n    const handleCreateTeamButton = () => {\n        teamCreation.open()\n    }\n\n    return (\n        <div className=\"onPageNavigation\">\n            <nav className=\"links\">\n                <div className=\"nav-item\" onClick={() => history.push(PROFILE_ROUTE)}>Профиль</div>\n                <div className=\"nav-item\" onClick={() => history.push(PROFILE_TOURNAMENTS_ROUTE)}>Турниры</div>\n                <div className=\"nav-item\" onClick={() => history.push(PROFILE_TEAMS_ROUTE)}>Команды</div>\n            </nav>\n            <div className=\"buttons\">\n                <Button class=\"black\" onClick={handleCreateTournamentButton}>Создать турнир</Button>\n                <Button class=\"red rounded\" onClick={handleCreateTeamButton}>Создать команду</Button>\n            </div>\n        </div>\n    );\n});\n\nexport default OnPageNavigation;","import \"./teams.scss\"\nimport placeholder from \"../../assets/logo_placeholder.svg\"\n\nimport React from 'react';\n\nconst TeamCard = (props) => {\n    return (\n        <div className=\"team-card\" onClick={props.onClick}>\n            <h6>{props.name}</h6>\n            <img\n                src={props.logo || placeholder}\n                alt=\"\"\n                onError={(e) => {\n                    e.target.onerror = null\n                    e.target.src = placeholder\n                }}\n            />\n            <p>#{props.rating}</p>\n        </div>\n    );\n};\n\nexport default TeamCard;","import \"./teams.scss\"\n\nimport React from 'react';\nimport TeamCard from \"./TeamCard\";\nimport {observer} from \"mobx-react-lite\";\n\nconst TeamsRow = (props) => {\n    return (\n        <div className=\"teams-list\">\n            {props.teams.map((t) =>\n                <TeamCard\n                    key={t.id}\n                    name={t.name}\n                    logo={t.logo}\n                    rating={t.rating}\n                    onClick={() => t.onClick()}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default observer(TeamsRow);","import \"./profile.scss\"\n\nimport React, {useEffect} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport TournamentsStaticTable from \"../../components/tournaments/TournamentsStaticTable\";\nimport Button from \"../../components/Button\";\nimport TeamsRow from \"../../components/teams/TeamsRow\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {PROFILE_TEAMS_ROUTE, PROFILE_TOURNAMENTS_ROUTE, TOURNAMENT_CREATION_ROUTE} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\nconst Profile = () => {\n    const history = useHistory()\n    const {userStore, modalStore} = useStore()\n    const teamCreation = modalStore.modalPages.teamCreation\n\n    const handleCreateTeamButton = () => {\n        teamCreation.open()\n    }\n\n    useEffect(() => {\n        document.title = 'Профиль'\n    }, [])\n\n    useEffect(() => {\n        userStore.load()\n        userStore.user.previewTournamentStore.load()\n        userStore.user.previewTeamStore.load()\n    }, [userStore])\n\n    return (\n        <div className=\"container\">\n            <OnPageNavigation/>\n            <div className=\"profile-section\">\n                <div className=\"profile-card\">\n                    <h4>Логин</h4>\n                    <p>{userStore.user?.username}</p>\n                    <h4>Дата регистрации</h4>\n                    <p>{userStore.user?.createdDate}</p>\n                </div>\n            </div>\n\n            <div className=\"tournaments-section\">\n                <div className=\"rect first-rect\"/>\n                <div className=\"my-tournaments\">\n                    <h2>Мои турниры</h2>\n                    <div className=\"tournaments\">\n                        <TournamentsStaticTable tournaments={userStore.user.previewTournamentStore.tournaments}/>\n                        <div className=\"buttons\">\n                            <Button class=\"black\" onClick={() => history.push(PROFILE_TOURNAMENTS_ROUTE)}>Показать\n                                все</Button>\n                            <Button class=\"red\" onClick={() => history.push(TOURNAMENT_CREATION_ROUTE)}>Создать\n                                турнир</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"rect last-rect\"/>\n            </div>\n\n            <div className=\"teams-section\">\n                <div className=\"my-teams\">\n                    <div className=\"my-teams__title\">\n                        <h2>Мои команды</h2>\n                    </div>\n                    <div className=\"my-teams__teams\">\n                        <TeamsRow teams={userStore.user.previewTeamStore.teams}/>\n                        <div className=\"buttons\">\n                            <Button class=\"red\" onClick={handleCreateTeamButton}>Создать\n                                команду</Button>\n                            <Button class=\"black\" onClick={() => history.push(PROFILE_TEAMS_ROUTE)}>Показать\n                                все</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(Profile);","export default __webpack_public_path__ + \"static/media/icn_search.6095cc55.svg\";","import \"./search.scss\"\nimport search from \"../../assets/icn_search.svg\"\n\nimport React from 'react';\nimport {observer} from \"mobx-react-lite\";\n\nconst Search = (props) => {\n    return (\n        <div className=\"search\">\n            <input\n                className=\"search-input\"\n                type=\"input\"\n                id=\"search\"\n                placeholder=\"Search\"\n                value={props.value}\n                onChange={props.onChange}\n            />\n            <div className=\"search-btn\" onClick={props.onSubmit}>\n                <img src={search} alt=\"Найти\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(Search);","import \"./teams.scss\"\n\nimport React from 'react';\nimport TeamCard from \"./TeamCard\";\nimport PageSelector from \"../PageSelector/PageSelector\";\nimport Button from \"../Button\";\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\n\n\nconst TeamsTable = (props) => {\n    const {modalStore} = useStore()\n    const teamCreation = modalStore.modalPages.teamCreation\n\n    const handleCreateTeamButton = () => {\n        teamCreation.open()\n    }\n\n    return (\n        <div className=\"teams-table\">\n            <div className=\"content\">\n                {props.teams.map((t) =>\n                    <TeamCard\n                        key={t.id}\n                        name={t.name}\n                        logo={t.logo}\n                        rating={t.rating}\n                    />\n                )}\n            </div>\n            <div className=\"actions\">\n                <PageSelector\n                    page={props.currentPage + 1}\n                    onPrevPage={props.prevPage}\n                    onNextPage={props.nextPage}\n                />\n                <Button class=\"red\" onClick={handleCreateTeamButton}>Создать команду</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(TeamsTable);","import \"./profile-teams.scss\"\n\nimport React, {useEffect} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Search from \"../../components/Search/Search\";\nimport TeamsTable from \"../../components/teams/TeamsTable\";\nimport useStore from \"../../hooks/useStore\";\nimport {observer} from \"mobx-react-lite\";\n\nconst ProfileTeams = () => {\n    const {userStore} = useStore()\n    const pageableTeamStore = userStore.user.pageableTeamStore\n\n    const handleSearchInput = (event) => {\n        const value = event.target.value\n\n        if (value.length < 32) {\n            pageableTeamStore.search.setValue(value)\n        }\n\n        if (!value) {\n            pageableTeamStore.load()\n        }\n    }\n\n    const handleSearchButton = () => {\n        pageableTeamStore.search.apply()\n        pageableTeamStore.load()\n    }\n\n    const nextPage = () => {\n        pageableTeamStore.onNextPage()\n    }\n\n    const prevPage = () => {\n        pageableTeamStore.onPrevPage()\n    }\n\n    useEffect(() => {\n        document.title = 'Мои команды'\n    }, [])\n\n    useEffect(() => {\n        pageableTeamStore.load()\n    }, [pageableTeamStore])\n\n    return (\n        <div className=\"container\">\n            <OnPageNavigation/>\n            <div className=\"filter-section\">\n                <h2>Мои команды</h2>\n                <Search\n                    value={pageableTeamStore.search.value}\n                    onChange={handleSearchInput}\n                    onSubmit={handleSearchButton}\n                />\n            </div>\n            <div className=\"table-section\">\n                <TeamsTable\n                    teams={pageableTeamStore.teams}\n                    currentPage={pageableTeamStore.page.number}\n                    prevPage={prevPage}\n                    nextPage={nextPage}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default observer(ProfileTeams);","import \"./my-input-range.scss\"\n\nimport React from 'react';\nimport InputRange from \"react-input-range\";\nimport {observer} from \"mobx-react-lite\";\n\n\nconst MyInputRange = (props) => {\n    return (\n        <div className=\"react-input-range\">\n            <InputRange\n                maxValue={props.maxValue}\n                minValue={props.minValue}\n                step={props.step}\n                value={props.value}\n                onChange={props.onChange}\n            />\n        </div>\n    );\n};\n\nexport default observer(MyInputRange);","export default __webpack_public_path__ + \"static/media/icn_pencil.5480220a.svg\";","export default __webpack_public_path__ + \"static/media/icn_cross.6ada0a65.svg\";","import \"./tournaments.scss\"\n\nimport React from 'react';\nimport TournamentCard from \"./TournamentCard\";\nimport pencil from \"../../assets/icn_pencil.svg\";\nimport cross from \"../../assets/icn_cross.svg\";\n\n\nconst EditableTournamentItem = (props) => {\n    return (\n        <div onClick={props.onEdit} className=\"tournament\">\n            <TournamentCard\n                id={props.id}\n                name={props.name}\n                logo={props.logo}\n                bracketType={props.bracketType}\n                totalTeams={props.totalTeams}\n                date={props.date}\n            />\n            <div className=\"actions\">\n                <img\n                    onClick={props.onEdit}\n                    src={pencil}\n                    alt=\"Изменить\"\n                />\n                <img\n                    onClick={props.onDelete}\n                    src={cross}\n                    alt=\"Удалить\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EditableTournamentItem;","import './alert.scss'\n\nimport React from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\n\nconst AlertBody = (props) => {\n    const {modalStore} = useStore()\n\n    return (\n        <form className=\"alert\">\n            <div className=\"header\">\n                <h3>{props.header}</h3>\n                <div className=\"close\" onClick={props.handleClose || (() => modalStore.alert.close())}>[x]</div>\n            </div>\n            <div className=\"content\">\n                <p>{props.content}</p>\n                <div className=\"delimiter\"/>\n            </div>\n            {props.actions && (\n                <div className=\"actions\">\n                    <button\n                        className=\"action-btn\"\n                        onClick={(event) => {\n                            event.preventDefault()\n                            props.onClick(event)\n                        }}\n                    >\n                        {props.actions.ok.text}\n                    </button>\n                    <button\n                        className=\"action-btn\"\n                        onClick={(event) => {\n                            event.preventDefault()\n                            props.onClick(event)\n                        }}\n                    >\n                        {props.actions.cancel.text}\n                    </button>\n                </div>\n            )}\n        </form>\n    );\n};\n\nexport default observer(AlertBody);","import {store} from \"../index\";\nimport AlertBody from \"../components/Alert/AlertBody\";\n\nexport const alertWarning = (body) => {\n    store.modalStore.alert.open(body)\n}\n\nexport const alertError = (e) => {\n    alertWarning(\n        <AlertBody\n            header=\"Ошибка\"\n            content={e.toString()}\n        />\n    )\n\n}\n\nexport const alertMessage = (header, message) => {\n    alertWarning(\n        <AlertBody\n            header={header}\n            content={message}\n        />\n    )\n}\n\nexport const toDate = (string) => {\n    let [time, date] = string.split(' ')\n    time = time.split(':')\n    date = date.split('/')\n    return new Date(date[2], date[1], date[0], time[0], time[1])\n}\n\nexport const compare = (a, b, reverse = false) => {\n    return reverse ? (a < b) - (b < a) : (b < a) - (a < b)\n}","import './tournaments.scss'\n\nimport React, {useState} from 'react';\nimport PageSelector from \"../PageSelector/PageSelector\";\nimport Button from \"../Button\";\nimport EditableTournamentItem from \"./EditableTournamentItem\";\nimport {observer} from \"mobx-react-lite\";\nimport AlertBody from \"../Alert/AlertBody\";\nimport {alertWarning, compare, toDate} from \"../../utils/utils\";\nimport useStore from \"../../hooks/useStore\";\nimport {useHistory} from \"react-router-dom\";\nimport {TOURNAMENT_CREATION_ROUTE} from \"../../utils/constants\";\n\nconst TournamentsDynamicTable = (props) => {\n    const history = useHistory()\n    const {modalStore} = useStore()\n    const [filters, setFilters] = useState({\n        nameFilter: {\n            state: 0,\n            priority: 0,\n            comparator: (a, b, reverse) => compare(a.name.toLowerCase(), b.name.toLowerCase(), reverse)\n        },\n        teamsFilter: {\n            state: 0,\n            priority: 0,\n            comparator: (a, b, reverse) => compare(a.totalTeams, b.totalTeams, reverse)\n        },\n        createdDateFilter: {\n            state: 1,\n            priority: 1,\n            comparator: (a, b, reverse) => compare(toDate(a.date), toDate(b.date), reverse)\n        }\n    })\n\n    const handleNameFilter = () => {\n        const [nameFilter, otherFilters] = managePriority(filters.nameFilter, [filters.teamsFilter, filters.createdDateFilter])\n        const [teamsFilter, createdDateFilter] = otherFilters\n\n        setFilters({nameFilter, teamsFilter, createdDateFilter})\n    }\n\n    const handleTeamsFilter = () => {\n        const [teamsFilter, otherFilters] = managePriority(filters.teamsFilter, [filters.nameFilter, filters.createdDateFilter])\n        const [nameFilter, createdDateFilter] = otherFilters\n\n        setFilters({nameFilter, teamsFilter, createdDateFilter})\n    }\n\n    const handleCreatedDateFilter = () => {\n        const [createdDateFilter, otherFilters] = managePriority(filters.createdDateFilter, [filters.nameFilter, filters.teamsFilter])\n        const [nameFilter, teamsFilter] = otherFilters\n\n        setFilters({nameFilter, teamsFilter, createdDateFilter})\n    }\n\n    const handleDeleteButton = (event, tournament) => {\n        alertWarning(\n            <AlertBody\n                header=\"Предупреждение\"\n                handleClose={() => modalStore.alert.close()}\n                content={`Вы действительно хотите удалить ${tournament.name}?`}\n                actions={{ok: {text: \"Удалить\", action: () => false}, cancel: {text: \"Отмена\", action: () => false}}}\n            />\n        )\n    }\n\n    return (\n        <div className=\"tournaments-table\">\n            <div\n                className=\"head\"\n                onMouseDown={(event) => {\n                    event.preventDefault()\n                }}\n                onDoubleClick={(event) => {\n                    event.preventDefault()\n                }}\n            >\n                <div className=\"kludge\"/>\n                <div\n                    className={arrowPos[filters.nameFilter.state]}\n                    onClick={handleNameFilter}\n                >\n                    Название\n                    <div className=\"filter-arrow\">▼</div>\n                </div>\n                <div\n                    className={arrowPos[filters.teamsFilter.state]}\n                    onClick={handleTeamsFilter}\n                >\n                    Команды\n                    <div className=\"filter-arrow\">▼</div>\n                </div>\n                <div\n                    className={arrowPos[filters.createdDateFilter.state]}\n                    onClick={handleCreatedDateFilter}\n                >\n                    Дата создания\n                    <div className=\"filter-arrow\">▼</div>\n                </div>\n                <div className=\"kludge\"/>\n                <div className=\"head-item bold\">Действие</div>\n            </div>\n            <div className=\"content\">\n                {sortWithPriority(props.tournaments, [filters.nameFilter, filters.teamsFilter, filters.createdDateFilter])\n                    .map((t) => {\n                        return (\n                            <EditableTournamentItem\n                                key={t.id}\n                                id={t.id}\n                                name={t.name}\n                                logo={t.logo}\n                                bracketType={t.bracketType}\n                                totalTeams={t.totalTeams}\n                                date={t.date}\n                                onEdit={() => t.onClick(history)}\n                                onDelete={(event) => handleDeleteButton(event, t)}\n                            />\n                        );\n                    })}\n            </div>\n            <div className=\"actions\">\n                <PageSelector\n                    page={props.page + 1}\n                    onPrevPage={props.prevPage}\n                    onNextPage={props.nextPage}\n                />\n                <Button class=\"red\" onClick={() => history.push(TOURNAMENT_CREATION_ROUTE)}>Создать турнир</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(TournamentsDynamicTable);\n\n\nconst managePriority = (target, context: Array) => {\n    target.state = next(target.state)\n\n    if (target.state === 1) {\n        target.priority = Math.max(...context.map(el => el.priority)) + 1\n    } else if (target.state === 0) {\n        context.forEach(el => {\n            if (el.priority > target.priority) {\n                el.priority -= 1\n            }\n        })\n        target.priority = 0\n    }\n\n    return [target, context]\n}\n\nconst sortWithPriority = (target, filters) => {\n    filters = filters.filter((f) => f.state !== 0).sort((a, b) => compare(a.priority, b.priority))\n    if (filters) {\n        return target.slice().sort((a, b) => {\n            // return filters.map((f) => f.comparator(a, b, f.state === 1)).reduce((a, b) => a || b, 0)\n            return (\n                filters[0]?.comparator(a, b, filters[0].state === 1) ||\n                filters[1]?.comparator(a, b, filters[1].state === 1) ||\n                filters[2]?.comparator(a, b, filters[2].state === 1)\n            )\n        })\n    }\n    return target\n}\n\nconst next = (value) => {\n    return (value + 1) % 3\n}\n\nconst arrowPos = {\n    0: 'head-item',\n    1: 'head-item filter',\n    2: 'head-item filter up',\n}\n","import \"./checkbox.scss\"\n\nimport React from 'react';\n\nconst Checkbox = (props) => {\n    return (\n        <div\n            className=\"checkbox\"\n            onMouseDown={(event) => {\n                event.preventDefault()\n            }}\n            onDoubleClick={(event) => {\n                event.preventDefault()\n            }}\n        >\n            <input\n                type=\"checkbox\"\n                id={props.id}\n                name={props.name}\n                value={props.value}\n                checked={props.checked}\n                onChange={props.onChange}\n            />\n            <label\n                htmlFor={props.id}\n                className=\"text-2\"\n            >\n                {props.value}\n            </label>\n        </div>\n    );\n};\n\nexport default Checkbox;","import React from 'react';\nimport Checkbox from \"./Checkbox\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CheckboxList = (props) => {\n    return (\n        <div>\n            {props.checkboxList.map((checkbox) =>\n                <Checkbox\n                    key={checkbox.id}\n                    id={checkbox.id}\n                    name={checkbox.name}\n                    value={checkbox.value}\n                    checked={checkbox.checked}\n                    onChange={() => checkbox.handleClick()}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default observer(CheckboxList);","import \"./profile-tournaments.scss\"\n\nimport React, {useEffect} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Search from \"../../components/Search/Search\";\nimport Button from \"../../components/Button\";\nimport MyInputRange from \"../../components/MyInputRange/MyInputRange\"\nimport TournamentsDynamicTable from \"../../components/tournaments/TournamentsDynamicTable\";\nimport CheckboxList from \"../../components/Checkbox/CheckboxList\";\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\n\nconst ProfileTournaments = () => {\n    const {userStore} = useStore()\n    const pageableTournamentStore = userStore.user.pageableTournamentStore\n\n    const handleSearchInput = (event) => {\n        const value = event.target.value\n        if (value.length < 32) {\n            pageableTournamentStore.search.setValue(value)\n        }\n        if (!value) {\n            pageableTournamentStore.load()\n        }\n    }\n\n    const handleSearchButton = () => {\n        pageableTournamentStore.search.apply()\n        pageableTournamentStore.load()\n    }\n\n    const handleRangeInput = (value) => {\n        if (value.min >= MIN_RANGE_VALUE && value.max <= MAX_RANGE_VALUE) {\n            pageableTournamentStore.filter.range.setValue(value)\n        }\n    }\n\n    const handleFiltersApplyButton = () => {\n        pageableTournamentStore.filter.apply()\n        pageableTournamentStore.load()\n    }\n\n    const nextPage = () => {\n        pageableTournamentStore.onNextPage()\n    }\n\n    const prevPage = () => {\n        pageableTournamentStore.onPrevPage()\n    }\n\n    useEffect(() => {\n        document.title = 'Мои Турниры'\n    }, [])\n\n    useEffect(() => {\n        pageableTournamentStore.filter.load()\n    }, [pageableTournamentStore])\n\n    return (\n        <div>\n            <div className=\"container\">\n                <OnPageNavigation/>\n                <div className=\"filter-section\">\n                    <h2>Мои турниры</h2>\n                    <Search\n                        value={pageableTournamentStore.search.value}\n                        onChange={handleSearchInput}\n                        onSubmit={handleSearchButton}\n                    />\n                    <div className=\"filters\">\n                        <h4>Фильтры</h4>\n                        <div className=\"filters-row\">\n                            <div className=\"tournament-format\">\n                                <h6>Формат турнира</h6>\n                                <div className=\"tournament-format__checkboxes\">\n                                    <CheckboxList checkboxList={pageableTournamentStore.filter.checkboxList}/>\n                                </div>\n                            </div>\n                            <div className=\"teams-range\">\n                                <h6>Количество участников</h6>\n                                <MyInputRange\n                                    maxValue={MAX_RANGE_VALUE}\n                                    minValue={MIN_RANGE_VALUE}\n                                    step={RANGE_STEP}\n                                    value={pageableTournamentStore.filter.range}\n                                    onChange={handleRangeInput}\n                                />\n                            </div>\n                        </div>\n                        <Button class=\"red\" onClick={handleFiltersApplyButton}>Применить</Button>\n                    </div>\n                </div>\n                <div className=\"table-section\">\n                    <TournamentsDynamicTable\n                        tournaments={pageableTournamentStore.tournaments}\n                        page={pageableTournamentStore.page.number}\n                        prevPage={prevPage}\n                        nextPage={nextPage}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(ProfileTournaments);\n\n\nconst MIN_RANGE_VALUE = 0\nconst MAX_RANGE_VALUE = 128\nconst RANGE_STEP = 4","import \"./input.scss\";\n\nimport React from 'react';\nimport {observer} from \"mobx-react-lite\";\n\nconst Input = (props) => {\n    return (\n        <div className=\"input\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                className={props.inputStyle || \"input-secondary\"}\n                disabled={props.disabled || false}\n                type={props.type}\n                id={props.id}\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={props.onChange}\n            />\n        </div>\n    );\n};\n\nexport default observer(Input);","import React from 'react';\nimport Checkbox from \"./Checkbox\";\n\nconst ChoiceBoxList = (props) => {\n    return (\n        <div className=\"choice-box-list\">\n            {Object.keys(props.choiceBoxList).map((key) =>\n                <Checkbox\n                    key={props.choiceBoxList[key].id}\n                    name={key}\n                    id={props.choiceBoxList[key].id}\n                    value={props.choiceBoxList[key].value}\n                    checked={props.choiceBoxList[key].checked}\n                    onChange={props.onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ChoiceBoxList;","import axios from \"axios\";\n\n\nconst $host = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n});\n\nconst $authHost = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n});\n\nconst authInterception = config => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n    return config;\n};\n\n$authHost.interceptors.request.use(authInterception);\n\nexport {\n    $host,\n    $authHost\n};","import {$authHost} from \"./index\";\nimport {alertError, alertMessage} from \"../utils/utils\";\n\nconst fetchData = async (url, params) => {\n    return await $authHost.get(url, {params: params})\n        .then((response) => response.data)\n        .catch(e => {\n            if (e?.response?.status === 401) {\n                alertMessage(\n                    'Предупреждение',\n                    'Время сессии истекло. Пожалуйста, авторизуйтесь снова.'\n                )\n            } else {\n                alertError(e)\n            }\n        })\n}\n\nexport const fetchProfileData = async () => {\n    const url = '/users/search/my'\n    return await fetchData(url)\n}\n\nexport const fetchProfileTournaments = async () => {\n    const url = '/tournaments/search/my'\n    const params = {\n        projection: 'bracketType',\n        sort: ['lastModifiedDate', 'desc'].join(','),\n        page: 0,\n        size: 4\n    }\n    const data = await fetchData(url, params)\n    return data?._embedded.tournaments || []\n}\n\nexport const fetchProfileTeams = async (page, size) => {\n    const url = '/teams/search/my'\n    const params = {\n        sort: ['lastModifiedDate', 'desc'].join(','),\n        page: 0,\n        size: 4\n    }\n    const data = await fetchData(url, params)\n    return data?._embedded.teams || []\n}\n\nexport const fetchTournaments = async (page, size, filters) => {\n    const params = {\n        projection: 'bracketType',\n        sort: ['createdDate', 'desc'].join(','),\n        page: page,\n        size: size\n    }\n    let url;\n\n    if (filters && (filters.name || filters.types || filters.range?.start || filters.range?.end)) {\n        url = '/tournaments/search/filters'\n        params.name = filters?.name || null\n        params.types = filters?.types?.join(',') || null\n        params.start = filters?.range?.start || null\n        params.end = filters?.range?.end || null\n    } else {\n        url = '/tournaments/search/my'\n    }\n\n    const data = await fetchData(url, params)\n    return data?._embedded && data?.page ? [data._embedded.tournaments, data.page] : [[], {\n        number: 0,\n        size: 0,\n        totalElements: 0,\n        totalPages: 0\n    }]\n}\n\nexport const fetchTournamentTypes = async () => {\n    const url = '/bracketTypes'\n    const params = {\n        sort: ['createdDate', 'asc'].join(','),\n    }\n    const data = await fetchData(url, params)\n    return data?._embedded?.bracketTypes || []\n}\n\nexport const fetchTeams = async (page, teamName) => {\n    const params = {\n        sort: ['rating', 'desc'].join(','),\n        page: page,\n        size: 15,\n    }\n    const url = teamName ? '/teams/search/ilike' : '/teams/search/my'\n    if (teamName) {\n        params.team = teamName\n    }\n\n    const data = await fetchData(url, params)\n    return data?._embedded && data?.page ? [data._embedded.teams, data.page] : [[], {\n        number: 0,\n        size: 0,\n        totalElements: 0,\n        totalPages: 0\n    }]\n}\n\nexport const fetchAllTeams = async () => {\n    const url = '/teams/search/my'\n    const params = {\n        sort: ['rating', 'desc'].join(','),\n        page: 0,\n        size: 50\n    }\n\n    let data = await fetchData(url, params)\n\n    const totalPages = data?.page.totalPages || 0\n    const teams: Array = data?._embedded.teams\n    for (let i = 1; i < totalPages; i++) {\n        data = await fetchData(url, {...params, page: i})\n        teams.push(...data?._embedded.teams)\n    }\n\n    return teams\n}\n\nexport const createTournament = async (data) => {\n    const url = '/tournaments/withBracket'\n    return await $authHost.post(url, data)\n        .then((response) => response.data.id)\n        .catch(e => {\n            if (e?.response?.status === 401) {\n                alertMessage(\n                    'Предупреждение',\n                    'Время сессии истекло. Пожалуйста, авторизуйтесь снова.'\n                )\n            } else if (e?.response?.status === 400) {\n                alertMessage('Ошибка', 'Турнир с таким названием уже существует')\n            } else {\n                alertError(e)\n            }\n        })\n}\n\nexport const fetchOneTournament = async (id) => {\n    const url = '/tournaments/' + id\n    return await fetchData(url)\n}","import \"./tournament-creation.scss\"\n\nimport React, {useEffect, useState} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input/Input\";\nimport Select from \"react-select\";\nimport ChoiceBoxList from \"../../components/Checkbox/ChoiceBoxList\";\nimport {createTournament, fetchAllTeams, fetchTournamentTypes} from \"../../http/authorized\";\nimport {alertMessage} from \"../../utils/utils\";\nimport {useHistory} from \"react-router-dom\";\nimport {PROFILE_TOURNAMENTS_ROUTE} from \"../../utils/constants\";\n\n\nconst TournamentCreation = () => {\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [format, setFormat] = useState([])\n    const [seed, setSeed] = useState({\n        random: {id: 'random', value: 'Случайный', checked: true},\n        rating: {id: 'rating', value: 'По рейтингу', checked: false},\n        fifo: {id: 'fifo', value: 'В порядке добавления', checked: false}\n    })\n    const [participants, setParticipants] = useState([])\n    const [teams, setTeams] = useState([])\n\n    const handleNameInput = (event) => {\n        if (event.target.value.length < 64) {\n            setName(event.target.value)\n        }\n    }\n\n    const handleFormatChoice = (event) => {\n        setFormat(Object.keys(format).reduce((a, b) => ({\n            ...a, [b]: {...format[b], checked: event.target.name === b}\n        }), {}))\n    }\n\n    const handleSeedChoice = (event) => {\n        setSeed(Object.keys(seed).reduce((a, b) => ({\n            ...a, [b]: {...seed[b], checked: event.target.name === b}\n        }), {}))\n    }\n\n    const handleSelectInput = (selected) => {\n        setParticipants(selected)\n    }\n\n    const handleCreateButton = () => {\n        if (isValidTournamentName(name) && isValidParticipantsNumber(participants)) {\n            const data = {\n                name: name,\n                logo: \"\",\n                bracketType: {id: format[Object.keys(format).filter((f) => format[f].checked)[0]].id},\n                seedType: seed[Object.keys(seed).filter((s) => seed[s].checked)[0]].id,\n                teams: participants.map((p) => ({id: p.value}))\n            }\n            createTournament(data).then((id) => {\n                if (id) {\n                    history.push(PROFILE_TOURNAMENTS_ROUTE + '/' + id)\n                }\n            })\n        } else {\n            let message = ''\n            message += !isValidTournamentName(name) ? 'Минимальная длина названия турнира 5 символов. ' : ''\n            message += !isValidParticipantsNumber(participants)? 'Минимальное количество участников 4.' : ''\n            alertMessage('Ошибка', message)\n        }\n    }\n\n    useEffect(() => {\n        document.title = 'Создание турнира'\n    }, [])\n\n    useEffect(() => {\n        fetchTournamentTypes().then((bracketTypes) => {\n            setFormat(bracketTypes.reduce((a, b, i) => ({\n                ...a,\n                [b.type]: {id: b.id, value: b.type, checked: i === 0},\n            }), {}))\n        })\n        fetchAllTeams().then((teams) => {\n            setTeams(teams.map((t) => {\n                return {\n                    value: t.id,\n                    label: `#${t.rating} | ${t.name}`\n                }\n            }))\n        })\n    }, [])\n\n    return (\n        <div>\n            <div className=\"container\">\n                <OnPageNavigation/>\n                <div className=\"input-section\">\n                    <h2>Создание турнира</h2>\n                    <div className=\"name input-subsection\">\n                        <h5>Название</h5>\n                        <Input\n                            value={name}\n                            onChange={handleNameInput}\n                            inputStyle={isValidTournamentName(name) ? 'input-secondary' : 'input-danger'}\n                            placeholder=\"Awesome Tournament 2024...\"\n                        />\n                    </div>\n                    <div className=\"logo-input input-subsection\">\n                        <h5>Логотип</h5>\n                        <Input placeholder=\"https://img-cdn...\" disabled={true}/>\n                    </div>\n                    <div className=\"format input-subsection\">\n                        <h5>Формат</h5>\n                        <div className=\"choice-box-list\">\n                            <ChoiceBoxList choiceBoxList={format} onChange={handleFormatChoice}/>\n                        </div>\n                    </div>\n                    <div className=\"seeding input-subsection\">\n                        <h5>Посев</h5>\n                        <ChoiceBoxList choiceBoxList={seed} onChange={handleSeedChoice}/>\n                    </div>\n                    <div className=\"participants input-subsection\">\n                        <h5>Участники</h5>\n                        <h5\n                            className={isValidParticipantsNumber(participants) ? 'participants-number' : 'participants-number danger'}\n                        >\n                            ({participants.length})\n                        </h5>\n                        <div className=\"select-input\">\n                            <Select\n                                options={teams}\n                                onChange={handleSelectInput}\n                                maxMenuHeight={200}\n                                isMulti={true}\n                                closeMenuOnSelect={false}\n                                name=\"teams\"\n                                className=\"basic-multi-select\"\n                                classNamePrefix=\"select\"\n                            />\n                        </div>\n                    </div>\n                    <Button class=\"red input-subsection\" onClick={handleCreateButton}>Создать</Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TournamentCreation;\n\n\nconst isValidTournamentName = (name) => {\n    return name.length > 4 && name.length < 64\n}\n\nconst isValidParticipantsNumber = (participants) => {\n    return participants.length > 3 && participants.length < 65\n}","import React, {useEffect} from 'react';\n\nconst About = () => {\n\n    useEffect(() => {\n        document.title = 'О сервисе'\n    }, [])\n\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nexport default About;","import React, {useEffect} from 'react';\n\nconst Creator = () => {\n\n    useEffect(() => {\n        document.title = 'Об авторе'\n    }, [])\n\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nexport default Creator;","import \"./bracket.scss\"\nimport placeholder from \"../../assets/logo_placeholder.svg\"\n\nimport React from 'react';\nimport {Seed, SeedItem, SeedTeam} from \"react-brackets\";\nimport {Bracket as BracketInner} from \"react-brackets\" ;\n\nconst Bracket = (props) => {\n    return (\n        <div className=\"bracket-frame\">\n            <BracketInner\n                bracketClassName=\"bracket\"\n                rounds={props.rounds}\n                renderSeedComponent={RenderSeed}\n                roundTitleComponent={RenderTitle}\n            />\n        </div>\n    );\n};\n\nexport default Bracket;\n\n\nconst RenderTitle = (title, roundIndex) => {\n    return (\n        <div className=\"round-title\">{title}</div>\n    );\n};\n\nconst RenderSeed = (seed, breakpoint, roundIndex) => {\n    return (\n        <Seed className=\"seed\" mobileBreakpoint={breakpoint}>\n            <SeedItem className=\"seed-item\">\n                <div>\n                    <SeedTeam className=\"seed-team\">\n                        <div className=\"game-participant\">\n                            <div className=\"align-left\">\n                                <img className=\"participant-img\" src={seed.teams?.[0]?.logo || placeholder} alt=\"\"/>\n                                <div className=\"participant-name\">{seed.teams?.[0]?.name || 'TBD'}</div>\n                            </div>\n                            <div className=\"participant-score\">{seed.teams?.[0]?.score || '-'}</div>\n                        </div>\n                    </SeedTeam>\n                    <div className=\"delimiter\"/>\n                    <SeedTeam className=\"seed-team\">\n                        <div className=\"game-participant\">\n                            <div className=\"align-left\">\n                                <img className=\"participant-img\" src={seed.teams?.[1]?.logo || placeholder} alt=\"\"/>\n                                <div className=\"participant-name\">{seed.teams?.[1]?.name || 'TBD'}</div>\n                            </div>\n                            <div className=\"participant-score\">{seed.teams?.[1]?.score || '-'}</div>\n                        </div>\n                    </SeedTeam>\n                </div>\n            </SeedItem>\n        </Seed>\n    );\n};","import {\n    ABOUT_ROUTE, CREATOR_ROUTE,\n    INDEX_ROUTE,\n    PROFILE_ROUTE,\n    PROFILE_TEAMS_ROUTE,\n    PROFILE_TOURNAMENTS_ROUTE,\n    SIGN_IN_ROUTE,\n    SIGN_UP_ROUTE,\n    TOURNAMENT_CREATION_ROUTE\n} from \"./utils/constants\";\nimport {\n    Main,\n    Profile,\n    ProfileTournaments,\n    ProfileTeams,\n    TournamentCreation\n} from \"./pages\"\nimport About from \"./pages/about/About\";\nimport Creator from \"./pages/creator/Creator\";\nimport Tournament from \"./pages/tournament/Tournament\";\n\nexport const authRoutes = [\n    {\n        path: INDEX_ROUTE,\n        Component: Main,\n    },\n    {\n        path: ABOUT_ROUTE,\n        Component: About,\n    },\n    {\n        path: CREATOR_ROUTE,\n        Component: Creator,\n    },\n    {\n        path: PROFILE_ROUTE,\n        Component: Profile,\n    },\n    {\n        path: PROFILE_TOURNAMENTS_ROUTE,\n        Component: ProfileTournaments,\n    },\n    {\n        path: PROFILE_TEAMS_ROUTE,\n        Component: ProfileTeams,\n    },\n    {\n        path: TOURNAMENT_CREATION_ROUTE,\n        Component: TournamentCreation,\n    },\n    {\n        path: PROFILE_TOURNAMENTS_ROUTE + '/:id',\n        Component: Tournament,\n    }\n];\n\nexport const publicRoutes = [\n    {\n        path: INDEX_ROUTE,\n        Component: Main,\n    },\n    {\n        path: SIGN_IN_ROUTE,\n        Component: Main,\n    },\n    {\n        path: SIGN_UP_ROUTE,\n        Component: Main,\n    },\n    {\n        path: ABOUT_ROUTE,\n        Component: About,\n    },\n    {\n        path: CREATOR_ROUTE,\n        Component: Creator,\n    },\n]","import \"./tournament.scss\"\nimport placeholder from \"../../assets/logo_placeholder.svg\"\n\nimport React, {useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Bracket from \"../../components/Bracket/Bracket\"\nimport Button from \"../../components/Button\";\nimport TeamsTable from \"../../components/teams/TeamsTable\";\nimport {fetchOneTournament} from \"../../http/authorized\";\n\nconst Tournament = () => {\n    const {id} = useParams()\n\n    const rounds = [\n        {\n            title: '1/4',\n            seeds: [\n                {},\n                {\n                    id: 1,\n                    teams: [\n                        {id: 1, name: 'The Leons', score: 2},\n                        {id: 2, name: 'Kitties', score: 6},\n                    ],\n                },\n                {},\n                {\n                    id: 2,\n                    teams: [\n                        {id: 3, name: 'The Leons', score: 2},\n                        {id: 4, name: 'Kitties', score: 6},\n                    ],\n                },\n            ],\n        },\n        {\n            title: '1/2',\n            seeds: [\n                {},\n                {},\n            ]\n        },\n        {\n            title: 'Финал',\n            seeds: [\n                {},\n            ]\n        },\n    ];\n\n    useEffect(() => {\n        fetchOneTournament(id).then((data) => {\n            console.log(data)\n        })\n    }, [id])\n\n    const teams = [\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        }\n    ]\n\n    useEffect(() => {\n        document.title = 'DreamHack Masters Spring 2021'\n    }, [])\n\n    return (\n        <div>\n            <div className=\"container\">\n                <OnPageNavigation/>\n                <div className=\"header-section\">\n                    <img className=\"tournament-logo\" src={placeholder} alt=\"\"/>\n                    <div className=\"tournament-actions-name\">\n                        <h2>DreamHack Masters Spring 2021</h2>\n                        <div>\n                            <Button class=\"red\">Редактировать</Button>\n                            <Button class=\"black\">Удалить</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bracket-section\">\n                    <h4>Сетка</h4>\n                    <div className=\"section-content-container\">\n                        <Bracket rounds={rounds}/>\n                    </div>\n                </div>\n                <div className=\"matches-section\">\n                </div>\n                <div className=\"participants-section\">\n                    <h4>Участники</h4>\n                    <div className=\"section-content-container\">\n                        <div className=\"table-section\">\n                            <TeamsTable\n                                teams={teams}\n                                currentPage={0}\n                                // prevPage={prevPage}\n                                // nextPage={nextPage}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Tournament;","import {observer} from \"mobx-react-lite\";\nimport {authRoutes, publicRoutes} from \"../routes\";\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport {INDEX_ROUTE} from \"../utils/constants\";\nimport useStore from \"../hooks/useStore\";\n\nconst AppRouter = () => {\n    const {userStore} = useStore()\n    return (\n        <Switch>\n            {userStore.isAuth && authRoutes.map(({path, Component}) => {\n                return (<Route key={path} path={path} component={Component} exact/>);\n            })}\n            {publicRoutes.map(({path, Component}) => {\n                return (<Route key={path} path={path} component={Component} exact/>);\n            })}\n            <Redirect to={INDEX_ROUTE}/>\n        </Switch>\n    );\n};\n\nexport default observer(AppRouter);","import \"./Logo.scss\";\n\nexport default function Logo(props) {\n  return <div className={[\"logo\", props.class].join(\" \")}>[~]</div>;\n}\n","import './navigation.scss'\n\nimport React from 'react';\nimport Button from \"../Button\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {ABOUT_ROUTE, CREATOR_ROUTE, INDEX_ROUTE, TOURNAMENT_CREATION_ROUTE} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\nconst Navigation = (props) => {\n    const history = useHistory()\n    const {userStore, modalStore} = useStore()\n\n    const handleCreateTournamentButton = () => {\n        if (userStore.isAuth) {\n            history.push(TOURNAMENT_CREATION_ROUTE)\n        } else {\n            modalStore.modalPages.signIn.open()\n        }\n    }\n\n    return (\n        <nav className={[\"navigation\", props.class].join(\" \")}>\n            <div className=\"nav-item\" onClick={() => history.push(INDEX_ROUTE)}>Главная</div>\n            <div className=\"nav-item\" onClick={() => history.push(ABOUT_ROUTE)}>О сервисе</div>\n            <div className=\"nav-item\" onClick={() => history.push(CREATOR_ROUTE)}>Об авторе</div>\n            <Button class=\"white\" onClick={handleCreateTournamentButton}>Создать турнир</Button>\n        </nav>\n    );\n};\n\nexport default observer(Navigation);","import \"./header.scss\";\n\nimport React from 'react';\nimport Logo from \"../Logo\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Button from \"../Button\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {INDEX_ROUTE, PROFILE_ROUTE} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\nconst Header = () => {\n    const history = useHistory()\n    const {userStore, modalStore} = useStore()\n    const [signIn, signUp] = [modalStore.modalPages.signIn, modalStore.modalPages.signUp]\n\n    const handleSignIn = () => {\n        signIn.open()\n    }\n    const handleSignUp = () => {\n        signUp.open()\n    }\n    const handleSignOut = () => {\n        userStore.signOut()\n        history.push(INDEX_ROUTE)\n    }\n    const handleProfile = () => {\n        history.push(PROFILE_ROUTE)\n    }\n\n    const leftButton = userStore.isAuth ?\n        {text: 'Профиль', onClick: handleProfile} :\n        {text: 'Вход', onClick: handleSignIn}\n\n    const rightButton = userStore.isAuth ?\n        {text: 'Выход', onClick: handleSignOut} :\n        {text: 'Регистрация', onClick: handleSignUp}\n\n    return (\n        <header>\n            <div className=\"container\">\n                <Logo class=\"black\"/>\n                <Navigation/>\n                <div className=\"auth\">\n                    <Button onClick={leftButton.onClick}>{leftButton.text}</Button>\n                    <Button class=\"rounded black\" onClick={rightButton.onClick}>{rightButton.text}</Button>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default observer(Header);","import \"./footer.scss\";\n\nimport React from 'react';\nimport Logo from \"../Logo\";\nimport Navigation from \"../Navigation/Navigation\";\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className=\"container\">\n                <Logo class=\"white\"/>\n                <Navigation class=\"white\"/>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import React from 'react';\nimport Modal from \"react-modal\";\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\n\nconst style = {\n    overlay: {display: 'flex', alignItems: 'center', justifyContent: 'center'},\n    content: {position: 'relative', inset: 0, padding: 0, borderRadius: '15px'}\n}\n\nconst Alert = () => {\n    const {modalStore} = useStore()\n\n    const close = () => {\n        modalStore.alert.close()\n    }\n\n    return (\n        <Modal\n            style={style}\n            isOpen={modalStore.alert.isOpen}\n            onRequestClose={close}\n        >\n            {modalStore.alert.body}\n        </Modal>\n    );\n};\n\nexport default observer(Alert);","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }) {\n    useEffect(() => {\n        const unlisten = history.listen(() => {\n            window.scrollTo(0, 0);\n        });\n        return () => {\n            unlisten();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return null;\n}\n\nexport default withRouter(ScrollToTop);","import \"./form.scss\";\n\nimport React from 'react';\nimport Input from \"../Input/Input\";\nimport Button from \"../Button\";\nimport {alertMessage} from \"../../utils/utils\";\nimport {observer} from \"mobx-react-lite\";\n\nconst Form = (props) => {\n    return (\n        <form className=\"form\">\n            <div className=\"close\" onClick={props.handleClose}>[x]</div>\n            <h3>{props.title}</h3>\n            {props.image && (\n                <div className=\"image\">\n                    <label htmlFor={props.image.id}>{props.image.label}</label>\n                    <div id={props.image.id} className=\"box\">\n                        <p>\n                            Drag and drop\n                            <br/>\n                            or <span>browse</span>\n                        </p>\n                    </div>\n                </div>\n            )}\n            <div className=\"fields\">\n                {props.fields.map((field) => {\n                    return (\n                        <Input\n                            key={field.id}\n                            id={field.id}\n                            label={field.label}\n                            inputStyle={field.inputStyle}\n                            type={field.type}\n                            placeholder={field.placeholder}\n                            value={field.value}\n                            onChange={field.onChange}\n                        />\n                    );\n                })}\n            </div>\n            {props.forgotPassword && (\n                <a\n                    href=\"/#\"\n                    className=\"forgotPassword\"\n                    onClick={(event) => {\n                        event.preventDefault()\n                        alertMessage('Предупреждение', 'Функционал в разработке')\n                    }}\n                >\n                    Забыли пароль?\n                </a>\n            )}\n            <div className=\"actions\">\n                <Button class=\"modal-rounded red\" onClick={props.handleSubmit}>{props.title}</Button>\n                {props.authText && (\n                    <span>{props.authText.text}\n                        <a href=\"/#\" onClick={props.authText.onClick}>{props.authText.action}</a>\n                    </span>\n                )}\n            </div>\n        </form>\n    );\n};\n\nexport default observer(Form);","import React from 'react';\nimport ModalReact from 'react-modal'\nimport {observer} from \"mobx-react-lite\";\n\nconst style = {\n    overlay: {display: 'flex', alignItems: 'center', justifyContent: 'center'},\n    content: {position: 'relative', inset: 0, padding: 0, borderRadius: '15px'}\n}\n\nconst Modal = ({onRequestClose, isOpen, children}) => {\n    return (\n        <ModalReact\n            style={style}\n            onRequestClose={onRequestClose}\n            isOpen={isOpen}\n        >\n            {children}\n        </ModalReact>\n    );\n};\n\nexport default observer(Modal);","import React from 'react';\nimport Form from \"../../components/Form/Form\";\nimport Modal from \"../../components/Modal/Modal\"\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport useStore from \"../../hooks/useStore\";\nimport {PROFILE_ROUTE} from \"../../utils/constants\";\n\nconst SignIn = () => {\n    const history = useHistory()\n    const {userStore, modalStore} = useStore()\n    const [signIn, signUp] = [modalStore.modalPages.signIn, modalStore.modalPages.signUp]\n\n    const handleClose = () => {\n        signIn.close()\n    }\n\n    const handleChangeLoginInput = (event) => {\n        signIn.login.setValue(event.target.value)\n    }\n\n    const handleChangePasswordInput = (event) => {\n        signIn.password.setValue(event.target.value)\n    }\n\n    const handleSignInButton = () => {\n        if (signIn.isValid()) {\n            userStore.signIn(signIn.login.value, signIn.password.value).then(() => {\n                if (userStore.isAuth) {\n                    handleClose()\n                    history.push(PROFILE_ROUTE)\n                }\n            })\n        }\n    }\n\n    const handleSignUpButton = () => {\n        handleClose()\n        signUp.open()\n    }\n\n    return (\n        <Modal\n            onRequestClose={handleClose}\n            isOpen={signIn.isOpen}\n        >\n            <Form\n                title=\"Вход\"\n                handleClose={handleClose}\n                handleSubmit={handleSignInButton}\n                fields={[\n                    {\n                        label: \"Логин\",\n                        inputStyle: signIn.login.isValid() ? 'input-secondary' : 'input-danger',\n                        type: \"text\",\n                        placeholder: \"login\",\n                        id: \"login\",\n                        value: signIn.login.value,\n                        onChange: handleChangeLoginInput\n                    },\n                    {\n                        label: \"Пароль\",\n                        inputStyle: signIn.password.isValid() ? 'input-secondary' : 'input-danger',\n                        type: \"password\",\n                        placeholder: \"password\",\n                        id: \"password\",\n                        value: signIn.password.value,\n                        onChange: handleChangePasswordInput\n                    },\n                ]}\n                forgotPassword={true}\n                authText={{text: \"Нужен аккаунт?\", action: \"Регистрация\", onClick: handleSignUpButton}}\n            />\n        </Modal>\n    );\n};\n\nexport default observer(SignIn);","import React from 'react';\nimport Form from \"../../components/Form/Form\";\nimport Modal from \"../../components/Modal/Modal\"\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {PROFILE_ROUTE} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\nconst SignUp = () => {\n    const history = useHistory()\n    const {userStore, modalStore} = useStore()\n    const [signIn, signUp] = [modalStore.modalPages.signIn, modalStore.modalPages.signUp]\n\n    const handleClose = () => {\n        signUp.close()\n    }\n\n    const handleChangeLoginInput = (event) => {\n        signUp.login.setValue(event.target.value)\n    }\n\n    const handleChangePasswordInput = (event) => {\n        signUp.password.setValue(event.target.value)\n    }\n\n    const handleChangeRePasswordInput = (event) => {\n        signUp.rePassword.setValue(event.target.value)\n    }\n\n    const handleSignInButton = () => {\n        handleClose()\n        signIn.open()\n    }\n\n    const handleSignUpButton = () => {\n        if (signUp.isValid()) {\n            userStore.signUp(signUp.login.value, signUp.password.value).then(() => {\n                if (userStore.isAuth) {\n                    handleClose()\n                    history.push(PROFILE_ROUTE)\n                }\n            })\n        }\n    }\n\n    return (\n        <Modal\n            onRequestClose={handleClose}\n            isOpen={signUp.isOpen}\n        >\n            <Form\n                title=\"Регистрация\"\n                handleClose={handleClose}\n                handleSubmit={handleSignUpButton}\n                fields={[\n                    {\n                        label: \"Логин\",\n                        inputStyle: signUp.login.isValid() ? 'input-secondary' : 'input-danger',\n                        type: \"text\",\n                        placeholder: \"login\",\n                        id: \"login\",\n                        value: signUp.login.value,\n                        onChange: handleChangeLoginInput\n                    },\n                    {\n                        label: \"Пароль\",\n                        inputStyle: signUp.password.isValid() ? 'input-secondary' : 'input-danger',\n                        type: \"password\",\n                        placeholder: \"password\",\n                        id: \"password\",\n                        value: signUp.password.value,\n                        onChange: handleChangePasswordInput\n                    },\n                    {\n                        label: \"Подтвердите пароль\",\n                        inputStyle: signUp.password.value === signUp.rePassword.value ? 'input-secondary' : 'input-danger',\n                        type: \"password\",\n                        placeholder: \"confirm password\",\n                        id: \"rePassword\",\n                        value: signUp.rePassword.value,\n                        onChange: handleChangeRePasswordInput\n                    },\n                ]}\n                forgotPassword={false}\n                authText={{text: \"Уже зарегистрированы?\", action: \"Вход\", onClick: handleSignInButton}}\n            />\n        </Modal>\n    );\n};\n\nexport default observer(SignUp);","import \"./form.scss\"\n\nimport React from 'react';\nimport Input from \"../Input/Input\";\nimport Button from \"../Button\";\nimport {observer} from \"mobx-react-lite\";\nimport {alertMessage} from \"../../utils/utils\";\n\nconst TeamForm = (props) => {\n    return (\n        <form className=\"form\">\n            <div className=\"close\" onClick={props.handleClose}>[x]</div>\n            <h3>{props.title}</h3>\n            <div className=\"image\">\n                <label htmlFor={props.image.id}>{props.image.label}</label>\n                <div id={props.image.id} className=\"box\" onClick={(event) => {\n                    event.preventDefault()\n                    alertMessage('Предупреждение', 'Функционал в разработке')\n                }}>\n                    <p>\n                        Drag and drop\n                        <br/>\n                        or <span>browse</span>\n                    </p>\n                </div>\n            </div>\n            <div className=\"fields\">\n                {props.fields.map((field) => {\n                    return (\n                        <Input\n                            key={field.id}\n                            id={field.id}\n                            label={field.label}\n                            inputStyle={field.inputStyle}\n                            type={field.type}\n                            placeholder={field.placeholder}\n                            value={field.value}\n                            onChange={field.onChange}\n                        />\n                    );\n                })}\n            </div>\n            <div className=\"actions actions-team\">\n                <Button class=\"modal-rounded red\" onClick={props.handleSubmit}>{props.action}</Button>\n            </div>\n        </form>\n    );\n};\n\nexport default observer(TeamForm);","import {$authHost, $host} from \"./index\";\nimport {alertError, alertMessage} from \"../utils/utils\";\nimport {store} from \"../index\";\nimport jwtDecode from \"jwt-decode\";\n\nclass ApiCall {\n    constructor() {\n        this.authHost = $authHost\n        this.host = $host\n    }\n\n    async _makeRequest(request) {\n        return request()\n            .then((response) => {\n                console.log(response.data)\n                return response.data\n            })\n            .catch((e) => {\n                if (e?.response?.status === 401) {\n                    alertMessage('Предупреждение', 'Время сессии истекло. Пожалуйста, авторизуйтесь снова.')\n                    store.userStore.signOut()\n                } else {\n                    alertError(e)\n                }\n            })\n    }\n\n    async signIn(login, password) {\n        return this.host.post('/auth/signIn', {\n            username: login,\n            password: password,\n        }).then((response) => {\n            const userData = jwtDecode(response.data.token)\n            localStorage.setItem('token', response.data.token)\n            return {user: {username: userData.sub, roles: userData.roles}, isAuth: true}\n        }).catch((e) => {\n            if (e?.response?.status === 401) {\n                alertMessage('Ошибка', 'Неверный логин или пароль')\n            } else {\n                alertError(e)\n            }\n            return {user: null, isAuth: false}\n        })\n    }\n\n    async signUp(login, password) {\n        return this.host.post('/auth/signUp', {\n            username: login,\n            password: password,\n            role: 'ROLE_USER'\n        }).then((response) => {\n            const userData = jwtDecode(response.data.token)\n            localStorage.setItem('token', response.data.token)\n            return {user: {username: userData.sub, roles: userData.roles}, isAuth: true}\n        }).catch((e) => {\n            if (e?.response?.status === 401) {\n                alertMessage('Ошибка', 'Пользователь с таким логином уже существует')\n            } else {\n                alertError(e)\n            }\n            return {user: null, isAuth: false}\n        })\n    }\n\n    async checkSession() {\n        return this.authHost.get('/auth')\n            .then(() => {\n                return true\n            })\n            .catch((e) => {\n                if (e?.response?.status === 401) {\n                    return false\n                } else {\n                    alertError(e)\n                }\n            })\n    }\n\n    async fetchPublicTournaments(page = 0, size = 5) {\n        const url = '/tournaments'\n        const config = {\n            params: {\n                projection: 'bracketType',\n                sort: ['createdDate', 'desc'].join(','),\n                page: page,\n                size: size\n            }\n        }\n        return this._makeRequest(() => this.host.get(url, config))\n            .then((data) => {\n                const tournaments = data?._embedded.tournaments.map((t) => ({\n                    id: t.id,\n                    date: t.createdDate,\n                    name: t.name,\n                    logo: t.logo,\n                    bracketType: t.bracketType,\n                    totalTeams: t.totalTeams,\n                })) || []\n                return {tournaments, page: data.page}\n            })\n    }\n\n    async fetchUserData() {\n        const url = '/users/search/my'\n        return this._makeRequest(() => this.authHost.get(url))\n            .then((data) => ({\n                id: data?.id,\n                createdDate: data?.createdDate,\n                username: data?.username,\n            }))\n    }\n\n    async fetchUserTournaments() {\n        const url = '/tournaments/search/my'\n        const params = {\n            projection: 'bracketType',\n            sort: ['lastModifiedDate', 'desc'].join(','),\n            page: 0,\n            size: 4\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                return data?._embedded.tournaments.map((t) => ({\n                    id: t.id,\n                    date: t.lastModifiedDate,\n                    name: t.name,\n                    logo: t.logo,\n                    bracketType: t.bracketType,\n                    totalTeams: t.totalTeams,\n                })) || []\n            })\n    }\n\n    async fetchUserTeams() {\n        const url = '/teams/search/my'\n        const params = {\n            sort: ['lastModifiedDate', 'desc'].join(','),\n            page: 0,\n            size: 4\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                return data?._embedded.teams.map((t) => ({\n                    id: t.id,\n                    createdDate: t.createdDate,\n                    lastModifiedDate: t.lastModifiedDate,\n                    name: t.name,\n                    logo: t.logo,\n                    rating: t.rating,\n                })) || []\n            })\n    }\n\n    async fetchUserFilteredTournaments(page, size, filters) {\n        const url = filters ? '/tournaments/search/filters' : '/tournaments/search/my'\n        const params = {\n            projection: 'bracketType',\n            sort: ['createdDate', 'desc'].join(','),\n            page: page,\n            size: size\n        }\n        if (filters) {\n            params.name = filters.name\n            params.types = filters.types?.join(',')\n            params.start = filters.range?.start\n            params.end = filters.range?.end\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                const tournaments = data?._embedded.tournaments.map((t) => ({\n                    id: t.id,\n                    date: t.createdDate,\n                    name: t.name,\n                    logo: t.logo,\n                    bracketType: t.bracketType,\n                    totalTeams: t.totalTeams,\n                })) || []\n                return {tournaments, page: data.page}\n            })\n    }\n\n    async fetchTournamentTypes() {\n        const url = '/bracketTypes'\n        const params = {\n            sort: ['createdDate', 'asc'].join(','),\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                return data?._embedded.bracketTypes.map((t) => ({\n                    id: t.id,\n                    name: t.type,\n                    value: t.type,\n                    checked: false\n                })) || []\n            })\n    }\n\n    async fetchUserFilteredTeams(page, size, filters) {\n        const params = {\n            sort: ['rating', 'desc'].join(','),\n            page: page,\n            size: 15,\n        }\n        let url\n        if (filters.teamName) {\n            url = '/teams/search/ilike'\n            params.team = filters.teamName\n        } else {\n            url = '/teams/search/my'\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                const teams = data?._embedded.teams.map((t) => ({\n                    id: t.id,\n                    createdDate: t.createdDate,\n                    lastModifiedDate: t.lastModifiedDate,\n                    name: t.name,\n                    logo: t.logo,\n                    rating: t.rating,\n                })) || []\n                return {teams, page: data.page}\n            })\n    }\n\n    async createTeam(name, rating, logo) {\n        const url = '/teams'\n        const data = {name, rating}\n        return this.authHost.post(url, data)\n            .then(() => true)\n            .catch((e) => {\n                if (e?.response?.status === 401) {\n                    alertMessage('Предупреждение', 'Время сессии истекло. Пожалуйста, авторизуйтесь снова.')\n                    store.userStore.signOut()\n                } else if (e?.response?.status === 400) {\n                    alertMessage('Ошибка', 'Невозможно создать команду: команда с таким названием уже существует.')\n                } else {\n                    alertError(e)\n                }\n            })\n    }\n}\n\nconst apiCall = new ApiCall()\nexport default apiCall;","import React, {useState} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\nimport Modal from \"../../components/Modal/Modal\";\nimport TeamForm from \"../../components/Form/TeamForm\";\nimport apiCall from \"../../http/api\";\n\nconst TeamCreation = () => {\n    const {modalStore} = useStore()\n    const teamCreation = modalStore.modalPages.teamCreation\n    const [name, setName] = useState('')\n    const [rating, setRating] = useState(0)\n\n    const handleClose = () => {\n        setName('')\n        setRating(0)\n        teamCreation.close()\n    }\n\n    const handleSubmit = () => {\n        if (isValidRating(rating) && isValidName(name)) {\n            apiCall.createTeam(name, rating).then((data) => {\n                if (data) {\n                    handleClose()\n                } else {\n                    setName('')\n                }\n            })\n        }\n    }\n\n    const handleNameInput = (event) => {\n        const value = event.target.value\n        if (value.length < 64) {\n            setName(value)\n        }\n    }\n\n    const handleRatingInput = (event) => {\n        const value = parseInt(event.target.value.replace(/\\D/, ''))\n        if (isValidRating(value)) {\n            setRating(value || 0)\n        }\n    }\n\n    return (\n        <Modal\n            onRequestClose={handleClose}\n            isOpen={teamCreation.isOpen}\n        >\n            <TeamForm\n                title=\"СОЗДАНИЕ КОМАНДЫ\"\n                action=\"СОЗДАТЬ\"\n                handleClose={handleClose}\n                handleSubmit={handleSubmit}\n                fields={[\n                    {\n                        label: \"Название\",\n                        inputStyle: isValidName(name) ? 'input-secondary' : 'input-danger',\n                        type: \"text\",\n                        placeholder: \"favorite team\",\n                        id: \"title\",\n                        value: name,\n                        onChange: handleNameInput,\n                    },\n                    {\n                        label: \"Очки рейтинга\",\n                        inputStyle: isValidRating(rating) ? 'input-secondary' : 'input-danger',\n                        type: \"text\",\n                        placeholder: \"1551\",\n                        id: \"rating\",\n                        value: rating,\n                        onChange: handleRatingInput,\n                    },\n                ]}\n                image={{label: \"Логотип\", id: \"logo\"}}\n            />\n        </Modal>\n    );\n};\n\nexport default observer(TeamCreation);\n\n\nconst isValidName = (name) => {\n    return name.length > 3 && name.length < 64\n}\n\nconst isValidRating = (rating) => {\n    return isNaN(rating) || (rating >= 0 && rating <= 10000)\n}","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\"\nimport {observer} from \"mobx-react-lite\";\nimport Alert from \"./components/Alert/Alert\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport useStore from \"./hooks/useStore\";\nimport SignIn from \"./pages/sign-in/SignIn\";\nimport SignUp from \"./pages/sign-up/SignUp\";\nimport TeamCreation from \"./pages/team-creation/TeamCreation\";\n\nconst App = () => {\n    const {userStore} = useStore()\n\n    if (userStore.isChecking) {\n        return <h1>LOADING</h1>\n    }\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className=\"App\">\n                <Header/>\n                <ScrollToTop/>\n                <AppRouter/>\n                <Footer/>\n                <SignIn/>\n                <SignUp/>\n                <TeamCreation/>\n                <Alert/>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default observer(App);","import {flow, getParent, getRoot, types} from \"mobx-state-tree\";\nimport apiCall from \"../http/api\";\nimport {PROFILE_TOURNAMENTS_ROUTE} from \"../utils/constants\";\n\nconst Bracket = types.model('Bracket', {\n    id: types.identifierNumber,\n})\n\nconst Team = types.model('Team', {\n    id: types.identifierNumber,\n    createdDate: types.string,\n    lastModifiedDate: types.string,\n    name: types.string,\n    logo: types.maybeNull(types.string),\n    rating: types.number,\n}).actions(self => {\n    return {\n        onClick() {\n            const rootStore = getRoot(self)\n            rootStore.modalStore.modalPages.teamEditing.open()\n        }\n    }\n})\n\nconst Tournament = types.model('Tournament', {\n    id: types.identifierNumber,\n    date: types.string,\n    name: types.string,\n    logo: types.maybeNull(types.string),\n    bracketType: types.string,\n    totalTeams: types.number,\n    teams: types.array(Team),\n    bracket: types.array(Bracket),\n}).actions(self => {\n    return {\n        onClick(history) {\n            history.push(PROFILE_TOURNAMENTS_ROUTE + '/' + self.id)\n        }\n    }\n})\n\nconst Page = types.model('Page', {\n    size: types.number,\n    totalElements: types.number,\n    totalPages: types.number,\n    number: types.number,\n})\n\nconst Search = types.model('Search', {\n    value: '',\n    isApplied: false,\n}).actions(self => {\n    return {\n        setValue(value) {\n            self.isApplied = false\n            self.value = value\n        },\n        apply() {\n            self.isApplied = true\n        }\n    }\n})\n\nconst Checkbox = types.model('Checkbox', {\n    id: types.number,\n    value: types.string,\n    name: types.string,\n    checked: false\n}).actions(self => {\n    return {\n        handleClick() {\n            getParent(self, 2).cancel()\n            self.checked = !self.checked\n        }\n    }\n})\n\nconst Range = types.model('Range', {\n    min: 0,\n    max: 128\n}).actions(self => {\n    return {\n        setValue({min, max}) {\n            getParent(self, 1).cancel()\n            self.min = min\n            self.max = max\n        }\n    }\n})\n\nconst Filter = types.model('Filter', {\n    checkboxList: types.array(Checkbox),\n    range: types.maybe(Range),\n    isApplied: false,\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.checkboxList = []\n            self.range = {min: 0, max: 128}\n            self.isLoading = true\n            try {\n                self.checkboxList = yield apiCall.fetchTournamentTypes()\n                yield getParent(self, 1).load()\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        apply() {\n            self.isApplied = true\n        },\n        cancel() {\n            self.isApplied = false\n        },\n        afterCreate() {\n            self.load()\n        }\n    }\n})\n\nconst PageableTeamStore = types.model('PageableTeamStore', {\n    teams: types.array(Team),\n    page: types.maybe(Page),\n    search: types.maybe(Search),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* (targetPage = 0) {\n            self.teams = []\n            self.isLoading = true\n            try {\n                const filters = {teamName: self.search.isApplied ? self.search.value : ''}\n                const {teams, page} = yield apiCall.fetchUserFilteredTeams(targetPage, 5, filters)\n                self.teams = teams\n                self.page = page\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        onNextPage: flow(function* () {\n            const targetPage = self.page.number + 1\n            if (targetPage < self.page.totalPages && !self.isLoading) {\n                yield self.load(targetPage)\n            }\n        }),\n        onPrevPage: flow(function* () {\n            const targetPage = self.page.number - 1\n            if (targetPage >= 0 && !self.isLoading) {\n                yield self.load(targetPage)\n            }\n        }),\n        afterCreate() {\n            self.page = {\n                size: 0,\n                totalElements: 0,\n                totalPages: 0,\n                number: 0\n            }\n            self.search = Search.create({})\n        }\n    }\n})\n\nconst PageableTournamentStore = types.model('PageableTournamentStore', {\n    tournaments: types.array(Tournament),\n    page: types.maybe(Page),\n    search: types.maybe(Search),\n    filter: types.optional(Filter, {\n        checkboxList: [],\n        range: {min: 0, max: 128},\n        isApplied: false,\n        isLoading: false,\n    }),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* (targetPage = 0) {\n            self.tournaments = []\n            self.isLoading = true\n            try {\n                const filters = {\n                    name: self.search.isApplied ? self.search.value : '',\n                }\n                if (self.filter.isApplied) {\n                    filters.types = self.filter.checkboxList.filter((el) => el.checked).map((el) => el.value)\n                    filters.range = {start: self.filter.range.min, end: self.filter.range.max}\n                }\n                const {tournaments, page} = yield apiCall.fetchUserFilteredTournaments(targetPage, 5, filters)\n                self.tournaments = tournaments\n                self.page = page\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        onNextPage: flow(function* () {\n            const targetPage = self.page.number + 1\n            if (targetPage < self.page.totalPages && !self.isLoading) {\n                yield self.load(targetPage)\n            }\n        }),\n        onPrevPage: flow(function* () {\n            const targetPage = self.page.number - 1\n            if (targetPage >= 0 && !self.isLoading) {\n                yield self.load(targetPage)\n            }\n        }),\n        afterCreate() {\n            self.page = {\n                size: 0,\n                totalElements: 0,\n                totalPages: 0,\n                number: 0\n            }\n            self.search = Search.create({})\n        }\n    }\n})\n\nconst PreviewTeamStore = types.model('PreviewTeamStore', {\n    teams: types.array(Team),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.teams = []\n            self.isLoading = true\n            try {\n                self.teams = yield apiCall.fetchUserTeams()\n            } finally {\n                self.isLoading = false\n            }\n        }),\n    }\n})\n\nconst PreviewTournamentStore = types.model('PreviewTournamentStore', {\n    tournaments: types.array(Tournament),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.tournaments = []\n            self.isLoading = true\n            try {\n                self.tournaments = yield apiCall.fetchUserTournaments()\n            } finally {\n                self.isLoading = false\n            }\n        }),\n    }\n})\n\nconst User = types.model('User', {\n    id: types.maybe(types.number),\n    createdDate: types.maybe(types.string),\n    username: types.maybe(types.string),\n    roles: types.array(types.string),\n    previewTournamentStore: PreviewTournamentStore,\n    previewTeamStore: PreviewTeamStore,\n    pageableTournamentStore: PageableTournamentStore,\n    pageableTeamStore: PageableTeamStore,\n})\n\nconst UserStore = types.model('UserStore', {\n    user: types.maybe(User),\n    isAuth: types.maybe(types.boolean),\n    isLoading: false,\n    isChecking: false\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.isLoading = true\n            try {\n                self.updateUserData(yield apiCall.fetchUserData())\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        signIn: flow(function* (login, password) {\n            self.isLoading = true\n            try {\n                const {user, isAuth} = yield apiCall.signIn(login, password)\n                self.updateUserData(user)\n                self.isAuth = isAuth\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        signUp: flow(function* (login, password) {\n            self.isLoading = true\n            try {\n                const {user, isAuth} = yield apiCall.signUp(login, password)\n                self.updateUserData(user)\n                self.isAuth = isAuth\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        checkSession: flow(function* () {\n            self.isChecking = true\n            try {\n                self.isAuth = yield apiCall.checkSession()\n            } finally {\n                self.isChecking = false\n            }\n        }),\n        signOut() {\n            self.isAuth = false\n            self.updateUserData({})\n            localStorage.setItem('token', '')\n        },\n        updateUserData(userData) {\n            self.user.id = userData?.id\n            self.user.createdDate = userData?.createdDate\n            self.user.username = userData?.username\n            self.user.roles = userData?.roles\n        },\n        afterCreate() {\n            self.checkSession()\n            self.user = {\n                previewTournamentStore: PreviewTournamentStore.create({}),\n                previewTeamStore: PreviewTeamStore.create({}),\n                pageableTournamentStore: PageableTournamentStore.create({}),\n                pageableTeamStore: PageableTeamStore.create({})\n            }\n        },\n    }\n})\n\nexport default UserStore;","import {flow, types} from \"mobx-state-tree\";\nimport apiCall from \"../http/api\";\n\nconst Tournament = types.model('Tournament', {\n    id: types.identifierNumber,\n    date: types.string,\n    name: types.string,\n    logo: types.maybeNull(types.string),\n    bracketType: types.string,\n    totalTeams: types.number,\n})\n\nconst Page = types.model('Page', {\n    size: types.number,\n    totalElements: types.number,\n    totalPages: types.number,\n    number: types.number\n})\n\nconst TournamentStore = types.model('TournamentStore', {\n    tournaments: types.optional(types.array(Tournament), []),\n    page: types.optional(Page, {\n        size: 0,\n        totalElements: 0,\n        totalPages: 0,\n        number: 0\n    }),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.isLoading = true\n            try {\n                const {tournaments, page} = yield apiCall.fetchPublicTournaments()\n                self.tournaments = tournaments\n                self.page = page\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        onNextPage: flow(function* () {\n            const targetPage = self.page.number + 1\n            if (targetPage < self.page.totalPages && !self.isLoading) {\n                self.isLoading = true\n                try {\n                    const {tournaments, page} = yield apiCall.fetchPublicTournaments(targetPage)\n                    self.tournaments = tournaments\n                    self.page = page\n                } finally {\n                    self.isLoading = false\n                }\n            }\n        }),\n        onPrevPage: flow(function* () {\n            const targetPage = self.page.number - 1\n            if (targetPage >= 0 && !self.isLoading) {\n                self.isLoading = true\n                try {\n                    const {tournaments, page} = yield apiCall.fetchPublicTournaments(targetPage)\n                    self.tournaments = tournaments\n                    self.page = page\n                } finally {\n                    self.isLoading = false\n                }\n            }\n        }),\n        afterCreate() {\n            self.load()\n        },\n    }\n})\n\nexport default TournamentStore;","import {types} from \"mobx-state-tree\";\n\nconst TeamModal = types.model('TeamModal', {\n    isOpen: false,\n}).actions(self => {\n    return {\n        open() {\n            self.isOpen = true\n        },\n        close() {\n            self.isOpen = false\n        }\n    }\n})\n\nconst SimpleCredit = types.model('SimpleCredit', {\n    value: '',\n}).views(self => {\n    return {\n        isValid() {\n            return self.value.length > 3\n        }\n    }\n}).actions(self => {\n    return {\n        setValue(value) {\n            if (value.length < 64) {\n                self.value = value\n            }\n        }\n    }\n})\n\nconst SignUp = types.model('SignUp', {\n    isOpen: false,\n    login: types.optional(SimpleCredit, {}),\n    password: types.optional(SimpleCredit, {}),\n    rePassword: types.optional(SimpleCredit, {}),\n}).views(self => {\n    return {\n        isValid() {\n            return self.login.isValid() && self.password.isValid() && self.rePassword.value === self.password.value\n        }\n    }\n}).actions(self => {\n    return {\n        open() {\n            self.isOpen = true\n        },\n        close() {\n            self.isOpen = false\n            self.login.setValue('')\n            self.password.setValue('')\n            self.rePassword.setValue('')\n        }\n    }\n})\n\nconst SignIn = types.model('SignIn', {\n    isOpen: false,\n    login: types.optional(SimpleCredit, {}),\n    password: types.optional(SimpleCredit, {}),\n}).views(self => {\n    return {\n        isValid() {\n            return self.login.isValid() && self.password.isValid()\n        }\n    }\n}).actions(self => {\n    return {\n        open() {\n            self.isOpen = true\n        },\n        close() {\n            self.isOpen = false\n            self.login.setValue('')\n            self.password.setValue('')\n        }\n    }\n})\n\nconst ModalPagesStore = types.model('ModalPagesStore', {\n    signIn: types.optional(SignIn, {}),\n    signUp: types.optional(SignUp, {}),\n    teamCreation: types.optional(TeamModal, {}),\n    teamEditing: types.optional(TeamModal, {}),\n})\n\nconst Alert = types.model('Alert', {\n    isOpen: false,\n}).actions(self => {\n    return {\n        open(body) {\n            self.body = body\n            self.isOpen = true\n        },\n        close() {\n            self.isOpen = false\n            self.body = null\n        }\n    }\n})\n\nconst ModalStore = types.model('ModalStore', {\n    alert: types.optional(Alert, {}),\n    modalPages: types.optional(ModalPagesStore, {}),\n})\n\nexport default ModalStore;","import {types} from \"mobx-state-tree\";\nimport UserStore from \"./user\";\nimport TournamentStore from \"./tournaments\";\nimport ModalStore from \"./modals\";\n\nconst RootStore = types.model('RootStore', {\n    modalStore: types.optional(ModalStore, {}),\n    userStore: types.optional(UserStore, {}),\n    tournamentStore: types.optional(TournamentStore, {}),\n})\n\nexport default RootStore;","import './index.css';\n\nimport React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport App from './App';\nimport RootStore from \"./store\";\n\nModal.setAppElement('#root')\n\nexport const store = RootStore.create({})\nexport const StoreContext = createContext(store)\n\nReactDOM.render(\n    <StoreContext.Provider value={store}>\n        <App/>\n    </StoreContext.Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}