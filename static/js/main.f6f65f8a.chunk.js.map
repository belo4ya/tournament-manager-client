{"version":3,"sources":["utils/constants.js","components/PageSelector/PageSelector.js","components/Button/index.js","components/Button/Button.js","assets/logo_placeholder.svg","components/tournaments/TournamentCard.js","components/tournaments/TournamentItem.js","components/tournaments/TournamentsStaticTable.js","hooks/useStore.js","pages/main/Main.js","components/OnPageNavigation/OnPageNavigation.js","components/teams/TeamCard.js","components/teams/TeamsRow.js","pages/profile/Profile.js","assets/icn_search.svg","components/Search/Search.js","components/teams/TeamsTable.js","http/index.js","components/Alert/AlertBody.js","utils/utils.js","http/authorized.js","pages/profile-teams/ProfileTeams.js","components/MyInputRange/MyInputRange.js","assets/icn_pencil.svg","assets/icn_cross.svg","components/tournaments/EditableTournamentItem.js","components/tournaments/TournamentsDynamicTable.js","components/Checkbox/Checkbox.js","components/Checkbox/CheckboxList.js","pages/profile-tournaments/ProfileTournaments.js","components/Input/Input.js","components/Checkbox/ChoiceBoxList.js","pages/tournament-creation/TournamentCreation.js","pages/about/About.js","pages/creator/Creator.js","components/Bracket/Bracket.js","routes.js","pages/tournament/Tournament.js","components/AppRouter.js","components/Logo/index.js","components/Navigation/Navigation.js","components/Header/Header.js","components/Footer/Footer.js","components/Form/Form.js","components/modals/SignInModalForm.js","http/public.js","utils/endpoints.js","components/modals/SignUpModalForm.js","components/Alert/Alert.js","components/ScrollToTop/ScrollToTop.js","App.js","store/user-store.js","store/tournament-store.js","store/team-store.js","store/modal-dialog.js","store/alert-store.js","http/api.js","store/user.js","store/tournaments.js","store/index.js","index.js"],"names":["INDEX_ROUTE","ABOUT_ROUTE","CREATOR_ROUTE","PROFILE_ROUTE","PROFILE_TOURNAMENTS_ROUTE","PROFILE_TEAMS_ROUTE","TOURNAMENT_CREATION_ROUTE","TEAM_CREATION_ROUTE","PageSelector","props","className","onClick","onPrevPage","page","onNextPage","Button","class","join","event","preventDefault","children","TournamentCard","src","logo","placeholder","alt","onError","e","target","onerror","name","bracketType","totalTeams","date","TournamentItem","id","observer","tournaments","map","t","useStore","useContext","StoreContext","history","useHistory","userStore","signUpModal","Context","tournamentStore","console","log","isAuth","push","openModal","number","OnPageNavigation","TeamCard","rating","teams","useEffect","load","user","previewTournamentStore","previewTeamStore","username","createdDate","type","value","onChange","onSubmit","search","TeamsTable","currentPage","prevPage","nextPage","$host","axios","create","baseURL","process","$authHost","interceptors","request","use","config","headers","Authorization","localStorage","getItem","AlertBody","alertStore","header","handleClose","closeAlert","content","actions","ok","text","cancel","alertWarning","body","globalStorage","showAlert","alertError","toString","alertMessage","message","toDate","string","split","time","Date","compare","a","b","reverse","fetchData","url","params","get","then","response","data","catch","status","fetchTournamentTypes","sort","_embedded","bracketTypes","fetchTeams","teamName","size","team","totalElements","totalPages","fetchAllTeams","i","createTournament","post","fetchOneTournament","ProfileTeams","useState","isApplied","setSearch","lastPage","state","setState","loading","updateTeamsPage","pageData","length","maxValue","minValue","step","EditableTournamentItem","onEdit","pencil","onDelete","cross","nameFilter","priority","comparator","toLowerCase","teamsFilter","createdDateFilter","filters","setFilters","onMouseDown","onDoubleClick","arrowPos","managePriority","otherFilters","sortWithPriority","tournament","action","context","next","Math","max","el","forEach","filter","f","slice","0","1","2","Checkbox","checked","htmlFor","checkboxList","checkbox","handleClick","pageableTournamentStore","setValue","apply","MAX_RANGE_VALUE","MIN_RANGE_VALUE","RANGE_STEP","range","min","Input","label","inputStyle","disabled","ChoiceBoxList","Object","keys","choiceBoxList","key","TournamentCreation","setName","format","setFormat","random","fifo","seed","setSeed","participants","setParticipants","setTeams","reduce","isValidTournamentName","isValidParticipantsNumber","options","selected","maxMenuHeight","isMulti","closeMenuOnSelect","classNamePrefix","seedType","s","p","About","Creator","Bracket","bracketClassName","rounds","renderSeedComponent","RenderSeed","roundTitleComponent","RenderTitle","title","roundIndex","breakpoint","mobileBreakpoint","score","authRoutes","path","Component","Main","Profile","ProfileTournaments","useParams","seeds","publicRoutes","component","exact","to","Logo","signInModal","leftButton","rightButton","signOut","Footer","Form","image","fields","field","forgotPassword","href","handleSubmit","authText","style","overlay","display","alignItems","justifyContent","position","inset","padding","borderRadius","login","setLogin","password","setPassword","closeModal","onRequestClose","isOpen","isValidLogin","isValidPassword","signIn","signUp","role","authorize","token","userData","jwtDecode","setItem","sub","roles","SignUpModalForm","rePassword","setRePassword","isValidRePassword","Alert","withRouter","unlisten","listen","window","scrollTo","isChecking","basename","UserStore","this","_id","_createdDate","_username","_roles","_isAuth","makeAutoObservable","TournamentStore","_tournaments","brackets","TeamStore","_teams","ModalDialog","_isOpen","AlertStore","_body","apiCall","authHost","host","store","projection","_makeRequest","lastModifiedDate","types","start","end","model","identifierNumber","Team","Tournament","maybeNull","array","bracket","Page","PageableTeamStore","optional","isLoading","self","getParent","Range","Filter","maybe","flow","afterCreate","Search","PageableTournamentStore","targetPage","fetchUserTournamentsFilters","PreviewTeamStore","fetchUserTeams","PreviewTournamentStore","fetchUserTournaments","User","pageableTeamStore","boolean","fetchUserData","updateUserData","checkSession","fetchPublicTournaments","RootStore","Modal","setAppElement","createContext","teamStore","ReactDOM","render","Provider","document","getElementById"],"mappings":"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","file":"static/js/main.f6f65f8a.chunk.js","sourcesContent":["export const INDEX_ROUTE = '/';\nexport const ABOUT_ROUTE = '/about';\nexport const CREATOR_ROUTE = '/creator';\n\nexport const SIGN_IN_ROUTE = '/auth/signIn';\nexport const SIGN_UP_ROUTE = '/auth/signUp';\n\nexport const PROFILE_ROUTE = '/profile';\nexport const PROFILE_TOURNAMENTS_ROUTE = '/profile/tournaments';\nexport const PROFILE_TEAMS_ROUTE = '/profile/teams';\n\nexport const TOURNAMENT_CREATION_ROUTE = '/profile/createTournament';\nexport const TEAM_CREATION_ROUTE = '/profile/createTeam';","import './page-selector.scss'\n\nimport React from 'react';\n\nconst PageSelector = (props) => {\n    return (\n        <div className=\"page-selector\">\n            <button className=\"arrow\" onClick={props.onPrevPage}>←</button>\n            <div className=\"current-page\">{props.page}</div>\n            <button className=\"arrow\" onClick={props.onNextPage}>→</button>\n        </div>\n    );\n};\n\nexport default PageSelector;","import Button from \"./Button\";\nexport default Button;","import './button.scss'\n\nimport React from 'react';\n\nconst Button = (props) => {\n    return (\n        <button\n            className={[\"button\", props.class].join(\" \")}\n            onClick={(event) => {\n                event.preventDefault()\n                props.onClick(event)\n            }}\n        >\n            {props.children}\n        </button>\n    );\n};\n\nexport default Button;","export default __webpack_public_path__ + \"static/media/logo_placeholder.69f12f78.svg\";","import \"./tournaments.scss\";\nimport placeholder from '../../assets/logo_placeholder.svg'\n\nimport React from 'react';\n\nconst TournamentCard = (props) => {\n    return (\n        <div className=\"tournament-card\">\n            <div className=\"title-container\">\n                <img\n                    src={props.logo || placeholder}\n                    alt=\"\"\n                    onError={(e) => {\n                        e.target.onerror = null\n                        e.target.src = placeholder\n                    }}\n                />\n                <div>\n                    <h5>{props.name}</h5>\n                    <span className=\"subtitle\">{props.bracketType}</span>\n                </div>\n            </div>\n            <div className=\"teams\">\n                <h5>{props.totalTeams}</h5>\n                <span className=\"subtitle\">Teams</span>\n            </div>\n            <div className=\"date\">{props.date}</div>\n        </div>\n    );\n};\n\nexport default TournamentCard;","import React from 'react';\nimport TournamentCard from \"./TournamentCard\";\n\nconst TournamentItem = (props) => {\n    return (\n        <div className=\"tournament-item\">\n            <TournamentCard\n                key={props.id}\n                logo={props.logo}\n                name={props.name}\n                bracketType={props.bracketType}\n                totalTeams={props.totalTeams}\n                date={props.date}\n            />\n        </div>\n    );\n};\n\nexport default TournamentItem;","import './tournaments.scss'\n\nimport React from 'react';\nimport TournamentItem from \"./TournamentItem\";\nimport {observer} from \"mobx-react-lite\";\n\nconst TournamentsStaticTable = (props) => {\n    return (\n        <div>\n            {props.tournaments.map(t =>\n                <TournamentItem\n                    key={t.id}\n                    logo={t.logo}\n                    name={t.name}\n                    bracketType={t.bracketType}\n                    totalTeams={t.totalTeams}\n                    date={t.date}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default observer(TournamentsStaticTable);","import {useContext} from \"react\";\nimport {StoreContext} from \"../index\";\n\nexport default function useStore() {\n    return useContext(StoreContext)\n}","import './main.scss'\n\nimport React, {useContext} from 'react';\nimport PageSelector from \"../../components/PageSelector/PageSelector\";\nimport Button from \"../../components/Button\"\nimport TournamentsStaticTable from \"../../components/tournaments/TournamentsStaticTable\";\nimport {useHistory} from 'react-router-dom'\nimport {Context} from \"../../index\";\nimport {PROFILE_ROUTE} from \"../../utils/constants\";\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\n\n\nconst Main = () => {\n    const history = useHistory()\n    const {userStore} = useStore()\n    const {signUpModal} = useContext(Context)\n    const {tournamentStore} = useStore()\n\n    const onNextPage = () => {\n        tournamentStore.onNextPage()\n    }\n\n    const onPrevPage = () => {\n        tournamentStore.onPrevPage()\n    }\n\n    const handleTryButton = () => {\n        if (userStore.isAuth) {\n            history.push(PROFILE_ROUTE)\n        } else {\n            signUpModal.openModal()\n        }\n    }\n\n    console.log('main')\n    return (\n        <div>\n            <section className=\"section-header\">\n                <div className=\"container\">\n                    <div className=\"content\">\n                        <h1>Генератор турнирных сеток и таблиц</h1>\n                        <Button class=\"black main\" onClick={handleTryButton}>Попробовать</Button>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"section-main\">\n                <div className=\"container\">\n                    <div className=\"tournaments-sheet\">\n                        <div className=\"title\">\n                            <h2>Последние турниры</h2>\n                        </div>\n                        <div className=\"tournaments\">\n                            <TournamentsStaticTable tournaments={tournamentStore.tournaments}/>\n                            <PageSelector page={tournamentStore.page.number + 1} onPrevPage={onPrevPage} onNextPage={onNextPage}/>\n                        </div>\n                    </div>\n                </div>\n            </section>\n        </div>\n    )\n};\n\nexport default observer(Main);","import \"./on-page-navigation.scss\"\n\nimport React from 'react';\nimport Button from \"../Button\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    PROFILE_ROUTE,\n    PROFILE_TEAMS_ROUTE,\n    PROFILE_TOURNAMENTS_ROUTE,\n    TEAM_CREATION_ROUTE,\n    TOURNAMENT_CREATION_ROUTE\n} from \"../../utils/constants\";\n\nconst OnPageNavigation = observer(() => {\n    const history = useHistory()\n\n    const handleCreateTournamentButton = (event) => {\n        event.preventDefault()\n        history.push(TOURNAMENT_CREATION_ROUTE)\n    }\n    const handleCreateTeamButton = (event) => {\n        event.preventDefault()\n        history.push(TEAM_CREATION_ROUTE)\n    }\n\n    return (\n        <div className=\"onPageNavigation\">\n            <nav className=\"links\">\n                <div className=\"nav-item\" onClick={() => history.push(PROFILE_ROUTE)}>Профиль</div>\n                <div className=\"nav-item\" onClick={() => history.push(PROFILE_TOURNAMENTS_ROUTE)}>Турниры</div>\n                <div className=\"nav-item\" onClick={() => history.push(PROFILE_TEAMS_ROUTE)}>Команды</div>\n            </nav>\n            <div className=\"buttons\">\n                <Button class=\"black\" onClick={handleCreateTournamentButton}>Создать турнир</Button>\n                <Button class=\"red rounded\" onClick={handleCreateTeamButton}>Создать команду</Button>\n            </div>\n        </div>\n    );\n});\n\nexport default OnPageNavigation;","import \"./teams.scss\"\nimport placeholder from \"../../assets/logo_placeholder.svg\"\n\nimport React from 'react';\n\nconst TeamCard = (props) => {\n    return (\n        <div className=\"team-card\">\n            <h6>{props.name}</h6>\n            <img\n                src={props.logo || placeholder}\n                alt=\"\"\n                onError={(e) => {\n                    e.target.onerror = null\n                    e.target.src = placeholder\n                }}\n            />\n            <p>#{props.rating}</p>\n        </div>\n    );\n};\n\nexport default TeamCard;","import \"./teams.scss\"\n\nimport React from 'react';\nimport TeamCard from \"./TeamCard\";\nimport {observer} from \"mobx-react-lite\";\n\nconst TeamsRow = (props) => {\n    return (\n        <div className=\"teams-list\">\n            {props.teams.map((t) =>\n                <TeamCard\n                    key={t.id}\n                    name={t.name}\n                    logo={t.logo}\n                    rating={t.rating}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default observer(TeamsRow);","import \"./profile.scss\"\n\nimport React, {useEffect} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport TournamentsStaticTable from \"../../components/tournaments/TournamentsStaticTable\";\nimport Button from \"../../components/Button\";\nimport TeamsRow from \"../../components/teams/TeamsRow\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {\n    PROFILE_TEAMS_ROUTE,\n    PROFILE_TOURNAMENTS_ROUTE,\n    TEAM_CREATION_ROUTE,\n    TOURNAMENT_CREATION_ROUTE\n} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\nconst Profile = () => {\n    const history = useHistory()\n    const {userStore} = useStore()\n\n    useEffect(() => {\n        userStore.load()\n        userStore.user.previewTournamentStore.load()\n        userStore.user.previewTeamStore.load()\n    }, [userStore])\n\n    return (\n        <div className=\"container\">\n            <OnPageNavigation/>\n            <div className=\"profile-section\">\n                <div className=\"profile-card\">\n                    <h4>Логин</h4>\n                    <p>{userStore.user?.username}</p>\n                    <h4>Дата регистрации</h4>\n                    <p>{userStore.user?.createdDate}</p>\n                </div>\n            </div>\n\n            <div className=\"tournaments-section\">\n                <div className=\"rect first-rect\"/>\n                <div className=\"my-tournaments\">\n                    <h2>Мои турниры</h2>\n                    <div className=\"tournaments\">\n                        <TournamentsStaticTable tournaments={userStore.user.previewTournamentStore.tournaments}/>\n                        <div className=\"buttons\">\n                            <Button class=\"black\" onClick={() => history.push(PROFILE_TOURNAMENTS_ROUTE)}>Показать\n                                все</Button>\n                            <Button class=\"red\" onClick={() => history.push(TOURNAMENT_CREATION_ROUTE)}>Создать\n                                турнир</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"rect last-rect\"/>\n            </div>\n\n            <div className=\"teams-section\">\n                <div className=\"my-teams\">\n                    <div className=\"my-teams__title\">\n                        <h2>Мои команды</h2>\n                    </div>\n                    <div className=\"my-teams__teams\">\n                        <TeamsRow teams={userStore.user.previewTeamStore.teams}/>\n                        <div className=\"buttons\">\n                            <Button class=\"red\" onClick={() => history.push(TEAM_CREATION_ROUTE)}>Создать\n                                команду</Button>\n                            <Button class=\"black\" onClick={() => history.push(PROFILE_TEAMS_ROUTE)}>Показать\n                                все</Button>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(Profile);","export default __webpack_public_path__ + \"static/media/icn_search.6095cc55.svg\";","import \"./search.scss\"\nimport search from \"../../assets/icn_search.svg\"\n\nimport React from 'react';\nimport {observer} from \"mobx-react-lite\";\n\nconst Search = (props) => {\n    return (\n        <div className=\"search\">\n            <input\n                className=\"search-input\"\n                type=\"input\"\n                id=\"search\"\n                placeholder=\"Search\"\n                value={props.value}\n                onChange={props.onChange}\n            />\n            <div className=\"search-btn\" onClick={props.onSubmit}>\n                <img src={search} alt=\"Найти\"/>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(Search);","import \"./teams.scss\"\n\nimport React from 'react';\nimport TeamCard from \"./TeamCard\";\nimport PageSelector from \"../PageSelector/PageSelector\";\nimport Button from \"../Button\";\n\n\nconst TeamsTable = (props) => {\n    return (\n        <div className=\"teams-table\">\n            <div className=\"content\">\n                {props.teams.map((t) =>\n                    <TeamCard\n                        key={t.id}\n                        name={t.name}\n                        logo={t.logo}\n                        rating={t.rating}\n                    />\n                )}\n            </div>\n            <div className=\"actions\">\n                <PageSelector\n                    page={props.currentPage + 1}\n                    onPrevPage={props.prevPage}\n                    onNextPage={props.nextPage}\n                />\n                <Button class=\"red\">Создать команду</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default TeamsTable;","import axios from \"axios\";\n\n\nconst $host = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n});\n\nconst $authHost = axios.create({\n    baseURL: process.env.REACT_APP_API_URL\n});\n\nconst authInterception = config => {\n    config.headers.Authorization = `Bearer ${localStorage.getItem('token')}`;\n    return config;\n};\n\n$authHost.interceptors.request.use(authInterception);\n\nexport {\n    $host,\n    $authHost\n};","import './alert.scss'\n\nimport React, {useContext} from 'react';\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../../index\";\n\nconst AlertBody = observer((props) => {\n    const {alertStore} = useContext(Context)\n    return (\n        <form className=\"alert\">\n            <div className=\"header\">\n                <h3>{props.header}</h3>\n                <div className=\"close\" onClick={props.handleClose || (() => alertStore.closeAlert())}>[x]</div>\n            </div>\n            <div className=\"content\">\n                <p>{props.content}</p>\n                <div className=\"delimiter\"/>\n            </div>\n            {props.actions && (\n                <div className=\"actions\">\n                    <button\n                        className=\"action-btn\"\n                        onClick={(event) => {\n                            event.preventDefault()\n                            props.onClick(event)\n                        }}\n                    >\n                        {props.actions.ok.text}\n                    </button>\n                    <button\n                        className=\"action-btn\"\n                        onClick={(event) => {\n                            event.preventDefault()\n                            props.onClick(event)\n                        }}\n                    >\n                        {props.actions.cancel.text}\n                    </button>\n                </div>\n            )}\n        </form>\n    );\n});\n\nexport default AlertBody;","import {globalStorage} from \"../index\";\nimport AlertBody from \"../components/Alert/AlertBody\";\n\nexport const alertWarning = (body) => {\n    globalStorage.alertStore.showAlert(body)\n}\n\nexport const alertError = (e) => {\n    alertWarning(\n        <AlertBody\n            header=\"Ошибка\"\n            content={e.toString()}\n        />\n    )\n\n}\n\nexport const alertMessage = (header, message) => {\n    alertWarning(\n        <AlertBody\n            header={header}\n            content={message}\n        />\n    )\n}\n\nexport const toDate = (string) => {\n    let [time, date] = string.split(' ')\n    time = time.split(':')\n    date = date.split('/')\n    return new Date(date[2], date[1], date[0], time[0], time[1])\n}\n\nexport const compare = (a, b, reverse = false) => {\n    return reverse ? (a < b) - (b < a) : (b < a) - (a < b)\n}","import {$authHost} from \"./index\";\nimport {alertError, alertMessage} from \"../utils/utils\";\nimport {globalStorage} from \"../index\";\n\nconst fetchData = async (url, params) => {\n    return await $authHost.get(url, {params: params})\n        .then((response) => response.data)\n        .catch(e => {\n            if (e?.response?.status === 401) {\n                alertMessage(\n                    'Предупреждение',\n                    'Время сессии истекло. Пожалуйста, авторизуйтесь снова.'\n                )\n                globalStorage.userStore.isAuth = false\n            } else {\n                alertError(e)\n            }\n        })\n}\n\nexport const fetchProfileData = async () => {\n    const url = '/users/search/my'\n    return await fetchData(url)\n}\n\nexport const fetchProfileTournaments = async () => {\n    const url = '/tournaments/search/my'\n    const params = {\n        projection: 'bracketType',\n        sort: ['lastModifiedDate', 'desc'].join(','),\n        page: 0,\n        size: 4\n    }\n    const data = await fetchData(url, params)\n    return data?._embedded.tournaments || []\n}\n\nexport const fetchProfileTeams = async (page, size) => {\n    const url = '/teams/search/my'\n    const params = {\n        sort: ['lastModifiedDate', 'desc'].join(','),\n        page: 0,\n        size: 4\n    }\n    const data = await fetchData(url, params)\n    return data?._embedded.teams || []\n}\n\nexport const fetchTournaments = async (page, size, filters) => {\n    const params = {\n        projection: 'bracketType',\n        sort: ['createdDate', 'desc'].join(','),\n        page: page,\n        size: size\n    }\n    let url;\n\n    if (filters && (filters.name || filters.types || filters.range?.start || filters.range?.end)) {\n        url = '/tournaments/search/filters'\n        params.name = filters?.name || null\n        params.types = filters?.types?.join(',') || null\n        params.start = filters?.range?.start || null\n        params.end = filters?.range?.end || null\n    } else {\n        url = '/tournaments/search/my'\n    }\n\n    const data = await fetchData(url, params)\n    return data?._embedded && data?.page ? [data._embedded.tournaments, data.page] : [[], {\n        number: 0,\n        size: 0,\n        totalElements: 0,\n        totalPages: 0\n    }]\n}\n\nexport const fetchTournamentTypes = async () => {\n    const url = '/bracketTypes'\n    const params = {\n        sort: ['createdDate', 'asc'].join(','),\n    }\n    const data = await fetchData(url, params)\n    return data?._embedded?.bracketTypes || []\n}\n\nexport const fetchTeams = async (page, teamName) => {\n    const params = {\n        sort: ['rating', 'desc'].join(','),\n        page: page,\n        size: 15,\n    }\n    const url = teamName ? '/teams/search/ilike' : '/teams/search/my'\n    if (teamName) {\n        params.team = teamName\n    }\n\n    const data = await fetchData(url, params)\n    return data?._embedded && data?.page ? [data._embedded.teams, data.page] : [[], {\n        number: 0,\n        size: 0,\n        totalElements: 0,\n        totalPages: 0\n    }]\n}\n\nexport const fetchAllTeams = async () => {\n    const url = '/teams/search/my'\n    const params = {\n        sort: ['rating', 'desc'].join(','),\n        page: 0,\n        size: 50\n    }\n\n    let data = await fetchData(url, params)\n\n    const totalPages = data?.page.totalPages || 0\n    const teams: Array = data?._embedded.teams\n    for (let i = 1; i < totalPages; i++) {\n        data = await fetchData(url, {...params, page: i})\n        teams.push(...data?._embedded.teams)\n    }\n\n    return teams\n}\n\nexport const createTournament = async (data) => {\n    const url = '/tournaments/withBracket'\n    return await $authHost.post(url, data)\n        .then((response) => response.data.id)\n        .catch(e => {\n            if (e?.response?.status === 401) {\n                alertMessage(\n                    'Предупреждение',\n                    'Время сессии истекло. Пожалуйста, авторизуйтесь снова.'\n                )\n                globalStorage.userStore.isAuth = false\n            } else if (e?.response?.status === 400) {\n                alertMessage('Ошибка', 'Турнир с таким названием уже существует')\n            } else {\n                alertError(e)\n            }\n        })\n}\n\nexport const fetchOneTournament = async (id) => {\n    const url = '/tournaments/' + id\n    return await fetchData(url)\n}","import \"./profile-teams.scss\"\n\nimport React, {useEffect, useState} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Search from \"../../components/Search/Search\";\nimport TeamsTable from \"../../components/teams/TeamsTable\";\nimport {fetchTeams} from \"../../http/authorized\";\n\nconst ProfileTeams = () => {\n    const [search, setSearch] = useState({value: '', isApplied: false})\n    const [state, setState] = useState({teams: [], currentPage: 0, lastPage: 0})\n    let loading = false\n\n    const updateTeamsPage = (page, teamName) => {\n        loading = true\n        fetchTeams(page, teamName).then(([teams, pageData]) => {\n            setState({teams: teams, currentPage: page, lastPage: pageData.totalPages - 1})\n            loading = false\n        })\n    }\n\n    const handleSearchInput = (event) => {\n        const value = event.target.value\n\n        if (value.length < 32) {\n            setSearch({value: value, isApplied: false})\n        }\n\n        if (!value) {\n            updateTeamsPage(state.currentPage)\n        }\n    }\n\n    const handleSearchButton = () => {\n        if (!loading) {\n            setSearch({value: search.value, isApplied: true})\n            updateTeamsPage(0, search.value)\n        }\n    }\n\n    const nextPage = () => {\n        if (state.currentPage < state.lastPage && !loading) {\n            updateTeamsPage(state.currentPage + 1, search.isApplied ? search.value : '')\n        }\n    }\n\n    const prevPage = () => {\n        if (state.currentPage > 0 && !loading) {\n            updateTeamsPage(state.currentPage - 1, search.isApplied ? search.value : '')\n        }\n    }\n\n    useEffect(() => {\n        updateTeamsPage(0)\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div className=\"container\">\n            <OnPageNavigation/>\n            <div className=\"filter-section\">\n                <h2>Мои команды</h2>\n                <Search\n                    value={search.value}\n                    onChange={handleSearchInput}\n                    onSubmit={handleSearchButton}\n                />\n            </div>\n            <div className=\"table-section\">\n                <TeamsTable\n                    teams={state.teams}\n                    currentPage={state.currentPage}\n                    prevPage={prevPage}\n                    nextPage={nextPage}\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default ProfileTeams;","import \"./my-input-range.scss\"\n\nimport React from 'react';\nimport InputRange from \"react-input-range\";\nimport {observer} from \"mobx-react-lite\";\n\n\nconst MyInputRange = (props) => {\n    return (\n        <div className=\"react-input-range\">\n            <InputRange\n                maxValue={props.maxValue}\n                minValue={props.minValue}\n                step={props.step}\n                value={props.value}\n                onChange={props.onChange}\n            />\n        </div>\n    );\n};\n\nexport default observer(MyInputRange);","export default __webpack_public_path__ + \"static/media/icn_pencil.5480220a.svg\";","export default __webpack_public_path__ + \"static/media/icn_cross.6ada0a65.svg\";","import \"./tournaments.scss\"\n\nimport React from 'react';\nimport TournamentCard from \"./TournamentCard\";\nimport pencil from \"../../assets/icn_pencil.svg\";\nimport cross from \"../../assets/icn_cross.svg\";\n\n\nconst EditableTournamentItem = (props) => {\n    return (\n        <div className=\"tournament\">\n            <TournamentCard\n                id={props.id}\n                name={props.name}\n                logo={props.logo}\n                bracketType={props.bracketType}\n                totalTeams={props.totalTeams}\n                date={props.date}\n            />\n            <div className=\"actions\">\n                <img\n                    onClick={props.onEdit}\n                    src={pencil}\n                    alt=\"Изменить\"\n                />\n                <img\n                    onClick={props.onDelete}\n                    src={cross}\n                    alt=\"Удалить\"\n                />\n            </div>\n        </div>\n    );\n};\n\nexport default EditableTournamentItem;","import './tournaments.scss'\n\nimport React, {useContext, useState} from 'react';\nimport PageSelector from \"../PageSelector/PageSelector\";\nimport Button from \"../Button\";\nimport EditableTournamentItem from \"./EditableTournamentItem\";\nimport {observer} from \"mobx-react-lite\";\nimport {Context} from \"../../index\";\nimport AlertBody from \"../Alert/AlertBody\";\nimport {alertWarning, compare, toDate} from \"../../utils/utils\";\n\nconst TournamentsDynamicTable = (props) => {\n    const [filters, setFilters] = useState({\n        nameFilter: {\n            state: 0,\n            priority: 0,\n            comparator: (a, b, reverse) => compare(a.name.toLowerCase(), b.name.toLowerCase(), reverse)\n        },\n        teamsFilter: {\n            state: 0,\n            priority: 0,\n            comparator: (a, b, reverse) => compare(a.totalTeams, b.totalTeams, reverse)\n        },\n        createdDateFilter: {\n            state: 1,\n            priority: 1,\n            comparator: (a, b, reverse) => compare(toDate(a.date), toDate(b.date), reverse)\n        }\n    })\n    const {alertStore} = useContext(Context)\n\n    const handleNameFilter = () => {\n        const [nameFilter, otherFilters] = managePriority(filters.nameFilter, [filters.teamsFilter, filters.createdDateFilter])\n        const [teamsFilter, createdDateFilter] = otherFilters\n\n        setFilters({nameFilter, teamsFilter, createdDateFilter})\n    }\n\n    const handleTeamsFilter = () => {\n        const [teamsFilter, otherFilters] = managePriority(filters.teamsFilter, [filters.nameFilter, filters.createdDateFilter])\n        const [nameFilter, createdDateFilter] = otherFilters\n\n        setFilters({nameFilter, teamsFilter, createdDateFilter})\n    }\n\n    const handleCreatedDateFilter = () => {\n        const [createdDateFilter, otherFilters] = managePriority(filters.createdDateFilter, [filters.nameFilter, filters.teamsFilter])\n        const [nameFilter, teamsFilter] = otherFilters\n\n        setFilters({nameFilter, teamsFilter, createdDateFilter})\n    }\n\n    const handleEditButton = (event, id) => {\n        console.log('edit: ', id)\n    }\n\n    const handleDeleteButton = (event, tournament) => {\n        alertWarning(\n            <AlertBody\n                header=\"Предупреждение\"\n                handleClose={() => alertStore.closeAlert()}\n                content={`Вы действительно хотите удалить ${tournament.name}?`}\n                actions={{ok: {text: \"Удалить\", action: () => false}, cancel: {text: \"Отмена\", action: () => false}}}\n            />\n        )\n    }\n\n    return (\n        <div className=\"tournaments-table\">\n            <div\n                className=\"head\"\n                onMouseDown={(event) => {\n                    event.preventDefault()\n                }}\n                onDoubleClick={(event) => {\n                    event.preventDefault()\n                }}\n            >\n                <div className=\"kludge\"/>\n                <div\n                    className={arrowPos[filters.nameFilter.state]}\n                    onClick={handleNameFilter}\n                >\n                    Название\n                    <div className=\"filter-arrow\">▼</div>\n                </div>\n                <div\n                    className={arrowPos[filters.teamsFilter.state]}\n                    onClick={handleTeamsFilter}\n                >\n                    Команды\n                    <div className=\"filter-arrow\">▼</div>\n                </div>\n                <div\n                    className={arrowPos[filters.createdDateFilter.state]}\n                    onClick={handleCreatedDateFilter}\n                >\n                    Дата создания\n                    <div className=\"filter-arrow\">▼</div>\n                </div>\n                <div className=\"kludge\"/>\n                <div className=\"head-item bold\">Действие</div>\n            </div>\n            <div className=\"content\">\n                {sortWithPriority(props.tournaments, [filters.nameFilter, filters.teamsFilter, filters.createdDateFilter])\n                    .map((t) => {\n                        return (\n                            <EditableTournamentItem\n                                key={t.id}\n                                id={t.id}\n                                name={t.name}\n                                logo={t.logo}\n                                bracketType={t.bracketType}\n                                totalTeams={t.totalTeams}\n                                date={t.date}\n                                onEdit={(event) => handleEditButton(event, t)}\n                                onDelete={(event) => handleDeleteButton(event, t)}\n                            />\n                        );\n                    })}\n            </div>\n            <div className=\"actions\">\n                <PageSelector\n                    page={props.page + 1}\n                    onPrevPage={props.prevPage}\n                    onNextPage={props.nextPage}\n                />\n                <Button class=\"red\">Создать турнир</Button>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(TournamentsDynamicTable);\n\n\nconst managePriority = (target, context: Array) => {\n    target.state = next(target.state)\n\n    if (target.state === 1) {\n        target.priority = Math.max(...context.map(el => el.priority)) + 1\n    } else if (target.state === 0) {\n        context.forEach(el => {\n            if (el.priority > target.priority) {\n                el.priority -= 1\n            }\n        })\n        target.priority = 0\n    }\n\n    return [target, context]\n}\n\nconst sortWithPriority = (target, filters) => {\n    filters = filters.filter((f) => f.state !== 0).sort((a, b) => compare(a.priority, b.priority))\n    if (filters) {\n        return target.slice().sort((a, b) => {\n            // return filters.map((f) => f.comparator(a, b, f.state === 1)).reduce((a, b) => a || b, 0)\n            return (\n                filters[0]?.comparator(a, b, filters[0].state === 1) ||\n                filters[1]?.comparator(a, b, filters[1].state === 1) ||\n                filters[2]?.comparator(a, b, filters[2].state === 1)\n            )\n        })\n    }\n    return target\n}\n\nconst next = (value) => {\n    return (value + 1) % 3\n}\n\nconst arrowPos = {\n    0: 'head-item',\n    1: 'head-item filter',\n    2: 'head-item filter up',\n}\n","import \"./checkbox.scss\"\n\nimport React from 'react';\n\nconst Checkbox = (props) => {\n    return (\n        <div\n            className=\"checkbox\"\n            onMouseDown={(event) => {\n                event.preventDefault()\n            }}\n            onDoubleClick={(event) => {\n                event.preventDefault()\n            }}\n        >\n            <input\n                type=\"checkbox\"\n                id={props.id}\n                name={props.name}\n                value={props.value}\n                checked={props.checked}\n                onChange={props.onChange}\n            />\n            <label\n                htmlFor={props.id}\n                className=\"text-2\"\n            >\n                {props.value}\n            </label>\n        </div>\n    );\n};\n\nexport default Checkbox;","import React from 'react';\nimport Checkbox from \"./Checkbox\";\nimport {observer} from \"mobx-react-lite\";\n\nconst CheckboxList = (props) => {\n    return (\n        <div>\n            {props.checkboxList.map((checkbox) =>\n                <Checkbox\n                    key={checkbox.id}\n                    name={checkbox.name}\n                    value={checkbox.value}\n                    checked={checkbox.checked}\n                    onChange={() => checkbox.handleClick()}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default observer(CheckboxList);","import \"./profile-tournaments.scss\"\n\nimport React, {useEffect} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Search from \"../../components/Search/Search\";\nimport Button from \"../../components/Button\";\nimport MyInputRange from \"../../components/MyInputRange/MyInputRange\"\nimport TournamentsDynamicTable from \"../../components/tournaments/TournamentsDynamicTable\";\nimport CheckboxList from \"../../components/Checkbox/CheckboxList\";\nimport {observer} from \"mobx-react-lite\";\nimport useStore from \"../../hooks/useStore\";\n\nconst ProfileTournaments = () => {\n    const {userStore} = useStore()\n    const pageableTournamentStore = userStore.user.pageableTournamentStore\n\n    const handleSearchInput = (event) => {\n        const value = event.target.value\n        if (value.length < 32) {\n            pageableTournamentStore.search.setValue(value)\n        }\n        if (!value) {\n            pageableTournamentStore.load()\n        }\n    }\n\n    const handleSearchButton = () => {\n        pageableTournamentStore.search.apply()\n        pageableTournamentStore.load()\n    }\n\n    const handleRangeInput = (value) => {\n        if (value.min >= MIN_RANGE_VALUE && value.max <= MAX_RANGE_VALUE) {\n            pageableTournamentStore.filter.range.setValue(value)\n        }\n    }\n\n    const handleFiltersApplyButton = () => {\n        pageableTournamentStore.filter.apply()\n        pageableTournamentStore.load()\n    }\n\n    const nextPage = () => {\n        pageableTournamentStore.onNextPage()\n    }\n\n    const prevPage = () => {\n        pageableTournamentStore.onPrevPage()\n    }\n\n    useEffect(() => {\n        pageableTournamentStore.filter.load()\n    }, [pageableTournamentStore])\n\n    return (\n        <div>\n            <div className=\"container\">\n                <OnPageNavigation/>\n                <div className=\"filter-section\">\n                    <h2>Мои турниры</h2>\n                    <Search\n                        value={pageableTournamentStore.search.value}\n                        onChange={handleSearchInput}\n                        onSubmit={handleSearchButton}\n                    />\n                    <div className=\"filters\">\n                        <h4>Фильтры</h4>\n                        <div className=\"filters-row\">\n                            <div className=\"tournament-format\">\n                                <h6>Формат турнира</h6>\n                                <div className=\"tournament-format__checkboxes\">\n                                    <CheckboxList checkboxList={pageableTournamentStore.filter.checkboxList}/>\n                                </div>\n                            </div>\n                            <div className=\"teams-range\">\n                                <h6>Количество участников</h6>\n                                <MyInputRange\n                                    maxValue={MAX_RANGE_VALUE}\n                                    minValue={MIN_RANGE_VALUE}\n                                    step={RANGE_STEP}\n                                    value={pageableTournamentStore.filter.range}\n                                    onChange={handleRangeInput}\n                                />\n                            </div>\n                        </div>\n                        <Button class=\"red\" onClick={handleFiltersApplyButton}>Применить</Button>\n                    </div>\n                </div>\n                <div className=\"table-section\">\n                    <TournamentsDynamicTable\n                        tournaments={pageableTournamentStore.tournaments}\n                        page={pageableTournamentStore.page.number}\n                        prevPage={prevPage}\n                        nextPage={nextPage}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default observer(ProfileTournaments);\n\n\nconst MIN_RANGE_VALUE = 0\nconst MAX_RANGE_VALUE = 128\nconst RANGE_STEP = 4","import \"./input.scss\";\n\nimport React from 'react';\n\nconst Input = (props) => {\n    return (\n        <div className=\"input\">\n            <label htmlFor={props.id}>{props.label}</label>\n            <input\n                className={props.inputStyle || \"input-secondary\"}\n                disabled={props.disabled || false}\n                type={props.type}\n                id={props.id}\n                placeholder={props.placeholder}\n                value={props.value}\n                onChange={props.onChange}\n            />\n        </div>\n    );\n};\n\nexport default Input;","import React from 'react';\nimport Checkbox from \"./Checkbox\";\n\nconst ChoiceBoxList = (props) => {\n    return (\n        <div className=\"choice-box-list\">\n            {Object.keys(props.choiceBoxList).map((key) =>\n                <Checkbox\n                    key={props.choiceBoxList[key].id}\n                    name={key}\n                    id={props.choiceBoxList[key].id}\n                    value={props.choiceBoxList[key].value}\n                    checked={props.choiceBoxList[key].checked}\n                    onChange={props.onChange}\n                />\n            )}\n        </div>\n    );\n};\n\nexport default ChoiceBoxList;","import \"./tournament-creation.scss\"\n\nimport React, {useEffect, useState} from 'react';\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Button from \"../../components/Button\";\nimport Input from \"../../components/Input/Input\";\nimport Select from \"react-select\";\nimport ChoiceBoxList from \"../../components/Checkbox/ChoiceBoxList\";\nimport {createTournament, fetchAllTeams, fetchTournamentTypes} from \"../../http/authorized\";\nimport {alertMessage} from \"../../utils/utils\";\nimport {useHistory} from \"react-router-dom\";\nimport {PROFILE_TOURNAMENTS_ROUTE} from \"../../utils/constants\";\n\n\nconst TournamentCreation = () => {\n    const history = useHistory()\n    const [name, setName] = useState('')\n    const [format, setFormat] = useState([])\n    const [seed, setSeed] = useState({\n        random: {id: 'random', value: 'Случайный', checked: true},\n        rating: {id: 'rating', value: 'По рейтингу', checked: false},\n        fifo: {id: 'fifo', value: 'В порядке добавления', checked: false}\n    })\n    const [participants, setParticipants] = useState([])\n    const [teams, setTeams] = useState([])\n\n    const handleNameInput = (event) => {\n        if (event.target.value.length < 64) {\n            setName(event.target.value)\n        }\n    }\n\n    const handleFormatChoice = (event) => {\n        setFormat(Object.keys(format).reduce((a, b) => ({\n            ...a, [b]: {...format[b], checked: event.target.name === b}\n        }), {}))\n    }\n\n    const handleSeedChoice = (event) => {\n        setSeed(Object.keys(seed).reduce((a, b) => ({\n            ...a, [b]: {...seed[b], checked: event.target.name === b}\n        }), {}))\n    }\n\n    const handleSelectInput = (selected) => {\n        setParticipants(selected)\n    }\n\n    const handleCreateButton = () => {\n        if (isValidTournamentName(name) && isValidParticipantsNumber(participants)) {\n            const data = {\n                name: name,\n                logo: \"\",\n                bracketType: {id: format[Object.keys(format).filter((f) => format[f].checked)[0]].id},\n                seedType: seed[Object.keys(seed).filter((s) => seed[s].checked)[0]].id,\n                teams: participants.map((p) => ({id: p.value}))\n            }\n            createTournament(data).then((id) => {\n                if (id) {\n                    history.push(PROFILE_TOURNAMENTS_ROUTE + '/' + id)\n                }\n            })\n        } else {\n            let message = ''\n            message += !isValidTournamentName(name) ? 'Минимальная длина названия турнира 5 символов. ' : ''\n            message += !isValidParticipantsNumber(participants)? 'Минимальное количество участников 4.' : ''\n            alertMessage('Ошибка', message)\n        }\n    }\n\n    useEffect(() => {\n        fetchTournamentTypes().then((bracketTypes) => {\n            setFormat(bracketTypes.reduce((a, b, i) => ({\n                ...a,\n                [b.type]: {id: b.id, value: b.type, checked: i === 0},\n            }), {}))\n        })\n        fetchAllTeams().then((teams) => {\n            setTeams(teams.map((t) => {\n                return {\n                    value: t.id,\n                    label: `#${t.rating} | ${t.name}`\n                }\n            }))\n        })\n    }, [])\n\n    return (\n        <div>\n            <div className=\"container\">\n                <OnPageNavigation/>\n                <div className=\"input-section\">\n                    <h2>Создание турнира</h2>\n                    <div className=\"name input-subsection\">\n                        <h5>Название</h5>\n                        <Input\n                            value={name}\n                            onChange={handleNameInput}\n                            inputStyle={isValidTournamentName(name) ? 'input-secondary' : 'input-danger'}\n                            placeholder=\"Awesome Tournament 2024...\"\n                        />\n                    </div>\n                    <div className=\"logo-input input-subsection\">\n                        <h5>Логотип</h5>\n                        <Input placeholder=\"https://img-cdn...\" disabled={true}/>\n                    </div>\n                    <div className=\"format input-subsection\">\n                        <h5>Формат</h5>\n                        <div className=\"choice-box-list\">\n                            <ChoiceBoxList choiceBoxList={format} onChange={handleFormatChoice}/>\n                        </div>\n                    </div>\n                    <div className=\"seeding input-subsection\">\n                        <h5>Посев</h5>\n                        <ChoiceBoxList choiceBoxList={seed} onChange={handleSeedChoice}/>\n                    </div>\n                    <div className=\"participants input-subsection\">\n                        <h5>Участники</h5>\n                        <h5\n                            className={isValidParticipantsNumber(participants) ? 'participants-number' : 'participants-number danger'}\n                        >\n                            ({participants.length})\n                        </h5>\n                        <div className=\"select-input\">\n                            <Select\n                                options={teams}\n                                onChange={handleSelectInput}\n                                maxMenuHeight={200}\n                                isMulti={true}\n                                closeMenuOnSelect={false}\n                                name=\"teams\"\n                                className=\"basic-multi-select\"\n                                classNamePrefix=\"select\"\n                            />\n                        </div>\n                    </div>\n                    <Button class=\"red input-subsection\" onClick={handleCreateButton}>Создать</Button>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default TournamentCreation;\n\n\nconst isValidTournamentName = (name) => {\n    return name.length > 4 && name.length < 64\n}\n\nconst isValidParticipantsNumber = (participants) => {\n    return participants.length > 3 && participants.length < 65\n}","import React from 'react';\n\nconst About = () => {\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nexport default About;","import React from 'react';\n\nconst Creator = () => {\n    return (\n        <div>\n\n        </div>\n    );\n};\n\nexport default Creator;","import \"./bracket.scss\"\nimport placeholder from \"../../assets/logo_placeholder.svg\"\n\nimport React from 'react';\nimport {Seed, SeedItem, SeedTeam} from \"react-brackets\";\nimport {Bracket as BracketInner} from \"react-brackets\" ;\n\nconst Bracket = (props) => {\n    return (\n        <div className=\"bracket-frame\">\n            <BracketInner\n                bracketClassName=\"bracket\"\n                rounds={props.rounds}\n                renderSeedComponent={RenderSeed}\n                roundTitleComponent={RenderTitle}\n            />\n        </div>\n    );\n};\n\nexport default Bracket;\n\n\nconst RenderTitle = (title, roundIndex) => {\n    return (\n        <div className=\"round-title\">{title}</div>\n    );\n};\n\nconst RenderSeed = (seed, breakpoint, roundIndex) => {\n    return (\n        <Seed className=\"seed\" mobileBreakpoint={breakpoint}>\n            <SeedItem className=\"seed-item\">\n                <div>\n                    <SeedTeam className=\"seed-team\">\n                        <div className=\"game-participant\">\n                            <div className=\"align-left\">\n                                <img className=\"participant-img\" src={seed.teams?.[0]?.logo || placeholder} alt=\"\"/>\n                                <div className=\"participant-name\">{seed.teams?.[0]?.name || 'TBD'}</div>\n                            </div>\n                            <div className=\"participant-score\">{seed.teams?.[0]?.score || '-'}</div>\n                        </div>\n                    </SeedTeam>\n                    <div className=\"delimiter\"/>\n                    <SeedTeam className=\"seed-team\">\n                        <div className=\"game-participant\">\n                            <div className=\"align-left\">\n                                <img className=\"participant-img\" src={seed.teams?.[1]?.logo || placeholder} alt=\"\"/>\n                                <div className=\"participant-name\">{seed.teams?.[1]?.name || 'TBD'}</div>\n                            </div>\n                            <div className=\"participant-score\">{seed.teams?.[1]?.score || '-'}</div>\n                        </div>\n                    </SeedTeam>\n                </div>\n            </SeedItem>\n        </Seed>\n    );\n};","import {\n    ABOUT_ROUTE, CREATOR_ROUTE,\n    INDEX_ROUTE,\n    PROFILE_ROUTE,\n    PROFILE_TEAMS_ROUTE,\n    PROFILE_TOURNAMENTS_ROUTE,\n    SIGN_IN_ROUTE,\n    SIGN_UP_ROUTE,\n    TOURNAMENT_CREATION_ROUTE\n} from \"./utils/constants\";\nimport {\n    Main,\n    Profile,\n    ProfileTournaments,\n    ProfileTeams,\n    TournamentCreation\n} from \"./pages\"\nimport About from \"./pages/about/About\";\nimport Creator from \"./pages/creator/Creator\";\nimport Tournament from \"./pages/tournament/Tournament\";\n\nexport const authRoutes = [\n    {\n        path: INDEX_ROUTE,\n        Component: Main,\n    },\n    {\n        path: ABOUT_ROUTE,\n        Component: About,\n    },\n    {\n        path: CREATOR_ROUTE,\n        Component: Creator,\n    },\n    {\n        path: PROFILE_ROUTE,\n        Component: Profile,\n    },\n    {\n        path: PROFILE_TOURNAMENTS_ROUTE,\n        Component: ProfileTournaments,\n    },\n    {\n        path: PROFILE_TEAMS_ROUTE,\n        Component: ProfileTeams,\n    },\n    {\n        path: TOURNAMENT_CREATION_ROUTE,\n        Component: TournamentCreation,\n    },\n    {\n        path: PROFILE_TOURNAMENTS_ROUTE + '/:id',\n        Component: Tournament,\n    }\n];\n\nexport const publicRoutes = [\n    {\n        path: INDEX_ROUTE,\n        Component: Main,\n    },\n    {\n        path: SIGN_IN_ROUTE,\n        Component: Main,\n    },\n    {\n        path: SIGN_UP_ROUTE,\n        Component: Main,\n    },\n    {\n        path: ABOUT_ROUTE,\n        Component: About,\n    },\n    {\n        path: CREATOR_ROUTE,\n        Component: Creator,\n    },\n]","import \"./tournament.scss\"\nimport placeholder from \"../../assets/logo_placeholder.svg\"\n\nimport React, {useEffect} from 'react';\nimport {useParams} from \"react-router-dom\";\nimport OnPageNavigation from \"../../components/OnPageNavigation/OnPageNavigation\";\nimport Bracket from \"../../components/Bracket/Bracket\"\nimport Button from \"../../components/Button\";\nimport TeamsTable from \"../../components/teams/TeamsTable\";\nimport {fetchOneTournament} from \"../../http/authorized\";\n\nconst Tournament = () => {\n    const {id} = useParams()\n\n    const rounds = [\n        {\n            title: '1/4',\n            seeds: [\n                {},\n                {\n                    id: 1,\n                    teams: [\n                        {id: 1, name: 'The Leons', score: 2},\n                        {id: 2, name: 'Kitties', score: 6},\n                    ],\n                },\n                {},\n                {\n                    id: 2,\n                    teams: [\n                        {id: 3, name: 'The Leons', score: 2},\n                        {id: 4, name: 'Kitties', score: 6},\n                    ],\n                },\n            ],\n        },\n        {\n            title: '1/2',\n            seeds: [\n                {},\n                {},\n            ]\n        },\n        {\n            title: 'Финал',\n            seeds: [\n                {},\n            ]\n        },\n    ];\n\n    useEffect(() => {\n        fetchOneTournament(id).then((data) => {\n            console.log(data)\n        })\n    }, [id])\n\n    const teams = [\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        },\n        {\n            id: 1,\n            name: 'Astralis',\n            logo: 'https://img-cdn.hltv.org/teamlogo/9bgXHp-oh1oaXr7F0mTGmd.svg?ixlib=java-2.1.0&s=f567161ab183001be33948b98c4b2067',\n            rating: 993,\n        }\n    ]\n\n    return (\n        <div>\n            <div className=\"container\">\n                <OnPageNavigation/>\n                <div className=\"header-section\">\n                    <img className=\"tournament-logo\" src={placeholder} alt=\"\"/>\n                    <div className=\"tournament-actions-name\">\n                        <h2>DreamHack Masters Spring 2021</h2>\n                        <div>\n                            <Button class=\"red\">Редактировать</Button>\n                            <Button class=\"black\">Удалить</Button>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"bracket-section\">\n                    <h4>Сетка</h4>\n                    <div className=\"section-content-container\">\n                        <Bracket rounds={rounds}/>\n                    </div>\n                </div>\n                <div className=\"matches-section\">\n                </div>\n                <div className=\"participants-section\">\n                    <h4>Участники</h4>\n                    <div className=\"section-content-container\">\n                        <div className=\"table-section\">\n                            <TeamsTable\n                                teams={teams}\n                                currentPage={0}\n                                // prevPage={prevPage}\n                                // nextPage={nextPage}\n                            />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default Tournament;","import {observer} from \"mobx-react-lite\";\nimport {authRoutes, publicRoutes} from \"../routes\";\nimport {Redirect, Route, Switch} from \"react-router-dom\"\nimport {INDEX_ROUTE} from \"../utils/constants\";\nimport useStore from \"../hooks/useStore\";\n\nconst AppRouter = () => {\n    const {userStore} = useStore()\n    return (\n        <Switch>\n            {userStore.isAuth && authRoutes.map(({path, Component}) => {\n                return (<Route key={path} path={path} component={Component} exact/>);\n            })}\n            {publicRoutes.map(({path, Component}) => {\n                return (<Route key={path} path={path} component={Component} exact/>);\n            })}\n            <Redirect to={INDEX_ROUTE}/>\n        </Switch>\n    );\n};\n\nexport default observer(AppRouter);","import \"./Logo.scss\";\n\nexport default function Logo(props) {\n  return <div className={[\"logo\", props.class].join(\" \")}>[~]</div>;\n}\n","import './navigation.scss'\n\nimport React, {useContext} from 'react';\nimport Button from \"../Button\";\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {ABOUT_ROUTE, CREATOR_ROUTE, INDEX_ROUTE, TOURNAMENT_CREATION_ROUTE} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\nconst Navigation = (props) => {\n    const history = useHistory()\n    const {userStore} = useStore()\n    const {signInModal} = useContext(Context)\n\n    const handleCreateTournamentButton = () => {\n        if (userStore.isAuth) {\n            history.push(TOURNAMENT_CREATION_ROUTE)\n        } else {\n            signInModal.openModal()\n        }\n    }\n\n    return (\n        <nav className={[\"navigation\", props.class].join(\" \")}>\n            <div className=\"nav-item\" onClick={() => history.push(INDEX_ROUTE)}>Главная</div>\n            <div className=\"nav-item\" onClick={() => history.push(ABOUT_ROUTE)}>О сервисе</div>\n            <div className=\"nav-item\" onClick={() => history.push(CREATOR_ROUTE)}>Об авторе</div>\n            <Button class=\"white\" onClick={handleCreateTournamentButton}>Создать турнир</Button>\n        </nav>\n    );\n};\n\nexport default observer(Navigation);","import \"./header.scss\";\n\nimport React, {useContext} from 'react';\nimport Logo from \"../Logo\";\nimport Navigation from \"../Navigation/Navigation\";\nimport Button from \"../Button\";\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {INDEX_ROUTE, PROFILE_ROUTE} from \"../../utils/constants\";\nimport useStore from \"../../hooks/useStore\";\n\n\nconst Header = () => {\n    const history = useHistory()\n    const {userStore} = useStore()\n    const {signInModal} = useContext(Context)\n    const {signUpModal} = useContext(Context)\n\n    const handleSignIn = () => {\n        signInModal.openModal()\n    }\n    const handleSignUp = () => {\n        signUpModal.openModal()\n    }\n    const handleSignOut = () => {\n        userStore.signOut()\n        history.push(INDEX_ROUTE)\n    }\n    const handleProfile = () => {\n        history.push(PROFILE_ROUTE)\n    }\n\n    const leftButton = userStore.isAuth ?\n        {text: 'Профиль', onClick: handleProfile} :\n        {text: 'Вход', onClick: handleSignIn}\n\n    const rightButton = userStore.isAuth ?\n        {text: 'Выход', onClick: handleSignOut} :\n        {text: 'Регистрация', onClick: handleSignUp}\n\n    return (\n        <header>\n            <div className=\"container\">\n                <Logo class=\"black\"/>\n                <Navigation/>\n                <div className=\"auth\">\n                    <Button onClick={leftButton.onClick}>{leftButton.text}</Button>\n                    <Button class=\"rounded black\" onClick={rightButton.onClick}>{rightButton.text}</Button>\n                </div>\n            </div>\n        </header>\n    );\n};\n\nexport default observer(Header);","import \"./footer.scss\";\n\nimport React from 'react';\nimport Logo from \"../Logo\";\nimport Navigation from \"../Navigation/Navigation\";\n\nconst Footer = () => {\n    return (\n        <footer>\n            <div className=\"container\">\n                <Logo class=\"white\"/>\n                <Navigation class=\"white\"/>\n            </div>\n        </footer>\n    );\n};\n\nexport default Footer;","import \"./form.scss\";\n\nimport React from 'react';\nimport Input from \"../Input/Input\";\nimport Button from \"../Button\";\nimport {alertMessage} from \"../../utils/utils\";\n\nconst Form = (props) => {\n    return (\n        <form className=\"form\">\n            <div className=\"close\" onClick={props.handleClose}>[x]</div>\n            <h3>{props.title}</h3>\n            {props.image && (\n                <div className=\"image\">\n                    <label htmlFor={props.image.id}>{props.image.label}</label>\n                    <div id={props.image.id} className=\"box\">\n                        <p>\n                            Drag and drop\n                            <br/>\n                            or <span>browse</span>\n                        </p>\n                    </div>\n                </div>\n            )}\n            <div className=\"fields\">\n                {props.fields.map((field) => {\n                    return (\n                        <Input\n                            key={field.id}\n                            id={field.id}\n                            label={field.label}\n                            inputStyle={field.inputStyle}\n                            type={field.type}\n                            placeholder={field.placeholder}\n                            value={field.value}\n                            onChange={field.onChange}\n                        />\n                    );\n                })}\n            </div>\n            {props.forgotPassword && (\n                <a\n                    href=\"/#\"\n                    className=\"forgotPassword\"\n                    onClick={(event) => {\n                        event.preventDefault()\n                        alertMessage('Предупреждение', 'Функционал в разработке')\n                    }}\n                >\n                    Забыли пароль?\n                </a>\n            )}\n            <div className=\"actions\">\n                <Button class=\"modal-rounded red\" onClick={props.handleSubmit}>{props.title}</Button>\n                {props.authText && (\n                    <span>{props.authText.text}\n                        <a href=\"/#\" onClick={props.authText.onClick}>{props.authText.action}</a>\n                    </span>\n                )}\n            </div>\n        </form>\n    );\n};\n\nexport default Form;","import React, {useContext, useState} from 'react';\nimport Form from \"../Form/Form\";\nimport Modal from \"react-modal\";\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport useStore from \"../../hooks/useStore\";\nimport {PROFILE_ROUTE} from \"../../utils/constants\";\n\nconst style = {\n    overlay: {display: 'flex', alignItems: 'center', justifyContent: 'center'},\n    content: {position: 'relative', inset: 0, padding: 0, borderRadius: '15px'}\n}\n\nconst SignInModalForm = () => {\n    const history = useHistory()\n    const {userStore} = useStore()\n    const {signInModal} = useContext(Context)\n    const {signUpModal} = useContext(Context)\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n\n    const handleClose = () => {\n        signInModal.closeModal()\n        setLogin('')\n        setPassword('')\n    }\n\n    const handleChangeLoginInput = (event) => {\n        setLogin(event.target.value)\n    }\n\n    const handleChangePasswordInput = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const handleSignInButton = () => {\n        if (isValidLogin(login) && isValidPassword(password)) {\n            userStore.signIn(login, password).then(() => {\n                if (userStore.isAuth) {\n                    handleClose()\n                    history.push(PROFILE_ROUTE)\n                }\n            })\n        }\n    }\n\n    const handleSignUpButton = () => {\n        handleClose()\n        signUpModal.openModal()\n    }\n\n    console.log('signIn')\n    return (\n        <Modal\n            style={style}\n            onRequestClose={handleClose}\n            isOpen={signInModal.isOpen}\n        >\n            <Form\n                title=\"Вход\"\n                handleClose={handleClose}\n                handleSubmit={handleSignInButton}\n                fields={[\n                    {\n                        label: \"Логин\",\n                        inputStyle: isValidLogin(login) ? 'input-secondary' : 'input-danger',\n                        type: \"text\",\n                        placeholder: \"login\",\n                        id: \"login\",\n                        value: login,\n                        onChange: handleChangeLoginInput\n                    },\n                    {\n                        label: \"Пароль\",\n                        inputStyle: isValidPassword(password) ? 'input-secondary' : 'input-danger',\n                        type: \"password\",\n                        placeholder: \"password\",\n                        id: \"password\",\n                        value: password,\n                        onChange: handleChangePasswordInput\n                    },\n                ]}\n                forgotPassword={true}\n                authText={{text: \"Нужен аккаунт?\", action: \"Регистрация\", onClick: handleSignUpButton}}\n            />\n        </Modal>\n    );\n};\n\nexport default observer(SignInModalForm);\n\n\nconst isValidLogin = (login) => {\n    return login.length > 3\n}\n\nconst isValidPassword = (password) => {\n    return password.length > 3\n}","import {$host} from \"./index\";\nimport {alertError, alertMessage} from \"../utils/utils\";\nimport {SIGN_IN_ENDPOINT, SIGN_UP_ENDPOINT} from \"../utils/endpoints\";\nimport jwtDecode from \"jwt-decode\";\nimport {globalStorage} from \"../index\";\n\nconst fetchData = async (url, params) => {\n    return await $host.get(url, {params: params})\n        .then((response) => response.data)\n        .catch((e) => alertError(e))\n}\n\nexport const fetchTournamentsPage = async (page) => {\n    const url = '/tournaments'\n    const params = {\n        projection: 'bracketType',\n        sort: ['createdDate', 'desc'].join(','),\n        page: page,\n        size: 5\n    }\n    return await fetchData(url, params)\n}\n\nexport const signIn = async (login, password) => {\n    return await $host.post(SIGN_IN_ENDPOINT, {username: login, password: password})\n        .then((response) => {\n            return authorize(response.data.token)\n        })\n        .catch((e) => {\n            if (e?.response?.status === 401) {\n                alertMessage('Ошибка', 'Неверный логин или пароль')\n                return false\n            } else {\n                alertError(e)\n            }\n        })\n}\n\nexport const signUp = async (login, password) => {\n    return await $host.post(SIGN_UP_ENDPOINT, {username: login, password: password, role: 'ROLE_USER'})\n        .then((response) => {\n            return authorize(response.data.token)\n        })\n        .catch(e => {\n            if (e?.response?.status === 401) {\n                alertMessage('Ошибка', 'Пользователь с таким логином уже существует')\n                return false\n            } else {\n                alertError(e)\n            }\n        })\n}\n\nconst authorize = (token) => {\n    const userData = jwtDecode(token)\n    localStorage.setItem('token', token)\n    globalStorage.userStore.isAuth = true\n    globalStorage.userStore.username = userData.sub\n    globalStorage.userStore.roles = userData.roles\n    return true\n}","export const AUTH_ENDPOINT = '/auth';\nexport const SIGN_IN_ENDPOINT = '/auth/signIn';\nexport const SIGN_UP_ENDPOINT = '/auth/signUp';\n\nexport const MY_USER_ENDPOINT = '/users/search/my';\nexport const TOURNAMENTS_ENDPOINT = '/tournaments';\nexport const TEAMS_ENDPOINT = '/teams';","import React, {useContext, useState} from 'react';\nimport Form from \"../Form/Form\";\nimport Modal from \"react-modal\";\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\nimport {useHistory} from \"react-router-dom\";\nimport {PROFILE_ROUTE} from \"../../utils/constants\";\nimport {signUp} from \"../../http/public\";\n\nconst style = {\n    overlay: {display: 'flex', alignItems: 'center', justifyContent: 'center'},\n    content: {position: 'relative', inset: 0, padding: 0, borderRadius: '15px'}\n}\n\nconst SignUpModalForm = observer(() => {\n    const history = useHistory()\n    const {signInModal} = useContext(Context)\n    const {signUpModal} = useContext(Context)\n    const [login, setLogin] = useState('');\n    const [password, setPassword] = useState('');\n    const [rePassword, setRePassword] = useState('');\n\n    const handleClose = () => {\n        signUpModal.closeModal()\n        setLogin('')\n        setPassword('')\n        setRePassword('')\n    }\n\n    const handleChangeLoginInput = (event) => {\n        setLogin(event.target.value)\n    }\n\n    const handleChangePasswordInput = (event) => {\n        setPassword(event.target.value)\n    }\n\n    const handleChangeRePasswordInput = (event) => {\n        setRePassword(event.target.value)\n    }\n\n    const handleSignInButton = (event) => {\n        event.preventDefault()\n        handleClose()\n        signInModal.openModal()\n    }\n\n    const handleSignUpButton = (event) => {\n        event.preventDefault()\n        if (isValidLogin(login) && isValidPassword(password) && isValidRePassword(password, rePassword)) {\n            signUp(login, password).then((status) => {\n                if (status) {\n                    handleClose()\n                    history.push(PROFILE_ROUTE)\n                }\n            })\n        }\n    }\n\n    return (\n        <Modal\n            style={style}\n            onRequestClose={handleClose}\n            isOpen={signUpModal.isOpen}\n        >\n            <Form\n                title=\"Регистрация\"\n                handleClose={handleClose}\n                handleSubmit={handleSignUpButton}\n                fields={[\n                    {\n                        label: \"Логин\",\n                        inputStyle: isValidLogin(login) ? 'input-secondary' : 'input-danger',\n                        type: \"text\",\n                        placeholder: \"login\",\n                        id: \"login\",\n                        value: login,\n                        onChange: handleChangeLoginInput\n                    },\n                    {\n                        label: \"Пароль\",\n                        inputStyle: isValidPassword(password) ? 'input-secondary' : 'input-danger',\n                        type: \"password\",\n                        placeholder: \"password\",\n                        id: \"password\",\n                        value: password,\n                        onChange: handleChangePasswordInput\n                    },\n                    {\n                        label: \"Подтвердите пароль\",\n                        inputStyle: isValidRePassword(password, rePassword) ? 'input-secondary' : 'input-danger',\n                        type: \"password\",\n                        placeholder: \"confirm password\",\n                        id: \"rePassword\",\n                        value: rePassword,\n                        onChange: handleChangeRePasswordInput\n                    },\n                ]}\n                forgotPassword={false}\n                authText={{text: \"Уже зарегистрированы?\", action: \"Вход\", onClick: handleSignInButton}}\n            />\n        </Modal>\n    );\n});\n\nexport default SignUpModalForm;\n\n\nconst isValidLogin = (login) => {\n    return login.length > 3\n}\n\nconst isValidPassword = (password) => {\n    return password.length > 3\n}\n\nconst isValidRePassword = (password, rePassword) => {\n    return password === rePassword\n}","import React, {useContext} from 'react';\nimport Modal from \"react-modal\";\nimport {Context} from \"../../index\";\nimport {observer} from \"mobx-react-lite\";\n\nconst style = {\n    overlay: {display: 'flex', alignItems: 'center', justifyContent: 'center'},\n    content: {position: 'relative', inset: 0, padding: 0, borderRadius: '15px'}\n}\n\nconst Alert = observer(() => {\n    const {alertStore} = useContext(Context)\n\n    return (\n        <Modal\n            style={style}\n            isOpen={alertStore.isOpen}\n            onRequestClose={() => alertStore.closeAlert()}\n        >\n            {alertStore.body}\n        </Modal>\n    );\n});\n\nexport default Alert;","import { useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\n\nfunction ScrollToTop({ history }) {\n    useEffect(() => {\n        const unlisten = history.listen(() => {\n            window.scrollTo(0, 0);\n        });\n        return () => {\n            unlisten();\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    return null;\n}\n\nexport default withRouter(ScrollToTop);","import React from 'react';\nimport {BrowserRouter} from \"react-router-dom\";\nimport AppRouter from \"./components/AppRouter\";\nimport Header from \"./components/Header/Header\";\nimport Footer from \"./components/Footer/Footer\"\nimport {observer} from \"mobx-react-lite\";\nimport SignInModalForm from \"./components/modals/SignInModalForm\";\nimport SignUpModalForm from \"./components/modals/SignUpModalForm\";\nimport Alert from \"./components/Alert/Alert\";\nimport ScrollToTop from \"./components/ScrollToTop/ScrollToTop\";\nimport useStore from \"./hooks/useStore\";\n\nconst App = () => {\n    const {userStore} = useStore()\n\n    if (userStore.isChecking) {\n        return <h1>LOADING</h1>\n    }\n\n    return (\n        <BrowserRouter basename={process.env.PUBLIC_URL}>\n            <div className=\"App\">\n                <Header/>\n                <SignInModalForm/>\n                <SignUpModalForm/>\n                <ScrollToTop/>\n                <AppRouter/>\n                <Footer/>\n                <Alert/>\n            </div>\n        </BrowserRouter>\n    );\n};\n\nexport default observer(App);","import {makeAutoObservable} from \"mobx\";\n\nexport default class UserStore {\n    constructor() {\n        this._id = null\n        this._createdDate = null\n        this._username = null\n        this._roles = null\n        this._isAuth = null\n        makeAutoObservable(this)\n    }\n\n    get id() {\n        return this._id;\n    }\n\n    set id(value) {\n        this._id = value;\n    }\n\n    get createdDate() {\n        return this._createdDate;\n    }\n\n    set createdDate(value) {\n        this._createdDate = value;\n    }\n\n    get username() {\n        return this._username;\n    }\n\n    set username(value) {\n        this._username = value;\n    }\n\n    get roles() {\n        return this._roles;\n    }\n\n    set roles(value) {\n        this._roles = value;\n    }\n\n    get isAuth() {\n        return this._isAuth;\n    }\n\n    set isAuth(value) {\n        this._isAuth = value;\n    }\n}","import {makeAutoObservable} from \"mobx\";\n\nexport default class TournamentStore {\n    constructor() {\n        this._tournaments = [\n            {id: 1, name: 'BLAST', logo: 'blast.png', user: {}, teams: [], brackets: []},\n            {id: 2, name: 'ESL', logo: 'esl.png', user: {}, teams: [], brackets: []}\n        ]\n        makeAutoObservable(this)\n    }\n    \n    get tournaments() {\n        return this._tournaments;\n    }\n\n    set tournaments(value) {\n        this._tournaments = value;\n    }\n}","import {makeAutoObservable} from \"mobx\";\n\nexport default class TeamStore {\n    constructor() {\n        this._teams = [\n            {id: 1, name: 'Astralis', logo: 'astralis.png', rating: 740, user: {}, tournaments: []},\n            {id: 2, name: 'Liquid', logo: 'liquid.png', rating: 650, user: {}, tournaments: []}\n        ]\n        makeAutoObservable(this)\n    }\n\n    get teams() {\n        return this._teams;\n    }\n\n    set teams(value) {\n        this._teams = value;\n    }\n}","import {makeAutoObservable} from \"mobx\";\n\nexport default class ModalDialog {\n\n    constructor() {\n        this._isOpen = false\n        makeAutoObservable(this)\n    }\n\n    openModal() {\n        this.isOpen = true\n    }\n\n    closeModal() {\n        this.isOpen = false\n    }\n\n    get isOpen() {\n        return this._isOpen;\n    }\n\n    set isOpen(value) {\n        this._isOpen = value;\n    }\n}","import {makeAutoObservable} from \"mobx\";\n\nexport default class AlertStore {\n\n    constructor() {\n        this._isOpen = false\n        this._body = null\n        makeAutoObservable(this)\n    }\n\n    showAlert(body) {\n        this._body = body\n        this._isOpen = true\n    }\n\n    closeAlert() {\n        this._isOpen = false\n        this._body = null\n    }\n\n    get isOpen() {\n        return this._isOpen;\n    }\n\n    set isOpen(value) {\n        this._isOpen = value;\n    }\n\n    get body() {\n        return this._body;\n    }\n\n    set body(value) {\n        this._body = value;\n    }\n}","import {$authHost, $host} from \"./index\";\nimport {alertError, alertMessage} from \"../utils/utils\";\nimport {store} from \"../index\";\nimport jwtDecode from \"jwt-decode\";\n\nclass ApiCall {\n    constructor() {\n        this.authHost = $authHost\n        this.host = $host\n    }\n\n    async _makeRequest(request) {\n        return request()\n            .then((response) => {\n                console.log(response.data)\n                return response.data\n            })\n            .catch((e) => {\n                if (e?.response?.status === 401) {\n                    alertMessage('Предупреждение', 'Время сессии истекло. Пожалуйста, авторизуйтесь снова.')\n                    store.userStore.signOut()\n                } else {\n                    alertError(e)\n                }\n            })\n    }\n\n    async signIn(login, password) {\n        return this.host.post('/auth/signIn', {\n            username: login,\n            password: password,\n        }).then((response) => {\n            const userData = jwtDecode(response.data.token)\n            localStorage.setItem('token', response.data.token)\n            return {user: {username: userData.sub, roles: userData.roles}, isAuth: true}\n        }).catch((e) => {\n            if (e?.response?.status === 401) {\n                alertMessage('Ошибка', 'Неверный логин или пароль')\n            } else {\n                alertError(e)\n            }\n            return {user: null, isAuth: false}\n        })\n    }\n\n    async signUp(login, password) {\n        return this.host.post('/auth/signUp', {\n            username: login,\n            password: password,\n            role: 'ROLE_USER'\n        }).then((response) => {\n            const userData = jwtDecode(response.data.token)\n            localStorage.setItem('token', response.data.token)\n            return {user: {username: userData.sub, roles: userData.roles}, isAuth: true}\n        }).catch((e) => {\n            if (e?.response?.status === 401) {\n                alertMessage('Ошибка', 'Пользователь с таким логином уже существует')\n            } else {\n                alertError(e)\n            }\n            return {user: null, isAuth: false}\n        })\n    }\n\n    async checkSession() {\n        return this.authHost.get('/auth')\n            .then(() => {\n                return true\n            })\n            .catch((e) => {\n                if (e?.response?.status === 401) {\n                    return false\n                } else {\n                    alertError(e)\n                }\n            })\n    }\n\n    async fetchPublicTournaments(page = 0, size = 5) {\n        const url = '/tournaments'\n        const config = {\n            params: {\n                projection: 'bracketType',\n                sort: ['createdDate', 'desc'].join(','),\n                page: page,\n                size: size\n            }\n        }\n        return this._makeRequest(() => this.host.get(url, config))\n            .then((data) => {\n                const tournaments = data._embedded.tournaments.map((t) => ({\n                    id: t.id,\n                    date: t.createdDate,\n                    name: t.name,\n                    logo: t.logo,\n                    bracketType: t.bracketType,\n                    totalTeams: t.totalTeams,\n                }))\n                return {tournaments, page: data.page}\n            })\n    }\n\n    async fetchUserData() {\n        const url = '/users/search/my'\n        return this._makeRequest(() => this.authHost.get(url))\n            .then((data) => ({\n                id: data.id,\n                createdDate: data.createdDate,\n                username: data.username,\n            }))\n    }\n\n    async fetchUserTournaments() {\n        const url = '/tournaments/search/my'\n        const params = {\n            projection: 'bracketType',\n            sort: ['lastModifiedDate', 'desc'].join(','),\n            page: 0,\n            size: 4\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                return data._embedded.tournaments.map((t) => ({\n                    id: t.id,\n                    date: t.lastModifiedDate,\n                    name: t.name,\n                    logo: t.logo,\n                    bracketType: t.bracketType,\n                    totalTeams: t.totalTeams,\n                }))\n            })\n    }\n\n    async fetchUserTeams() {\n        const url = '/teams/search/my'\n        const params = {\n            sort: ['lastModifiedDate', 'desc'].join(','),\n            page: 0,\n            size: 4\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                return data._embedded.teams.map((t) => ({\n                    id: t.id,\n                    createdDate: t.createdDate,\n                    lastModifiedDate: t.lastModifiedDate,\n                    name: t.name,\n                    logo: t.logo,\n                    rating: t.rating,\n                }))\n            })\n    }\n\n    async fetchUserTournamentsFilters(page, size, filters) {\n        const url = filters ? '/tournaments/search/filters' : '/tournaments/search/my'\n        const params = {\n            projection: 'bracketType',\n            sort: ['createdDate', 'desc'].join(','),\n            page: page,\n            size: size\n        }\n        if (filters) {\n            params.name = filters.name\n            params.types = filters.types?.join(',')\n            params.start = filters.range?.start\n            params.end = filters.range?.end\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                const tournaments = data._embedded.tournaments.map((t) => ({\n                    id: t.id,\n                    date: t.createdDate,\n                    name: t.name,\n                    logo: t.logo,\n                    bracketType: t.bracketType,\n                    totalTeams: t.totalTeams,\n                }))\n                return {tournaments, page: data.page}\n            })\n    }\n\n    async fetchTournamentTypes() {\n        const url = '/bracketTypes'\n        const params = {\n            sort: ['createdDate', 'asc'].join(','),\n        }\n        return this._makeRequest(() => this.authHost.get(url, {params}))\n            .then((data) => {\n                return data?._embedded.bracketTypes.map((t) => ({\n                    id: t.id,\n                    name: t.type,\n                    value: t.type,\n                    checked: false\n                }))\n            })\n    }\n\n}\n\nconst apiCall = new ApiCall($authHost)\nexport default apiCall;","import {flow, getParent, types} from \"mobx-state-tree\";\nimport apiCall from \"../http/api\";\n\nconst Bracket = types.model('Bracket', {\n    id: types.identifierNumber,\n})\n\nconst Team = types.model('Team', {\n    id: types.identifierNumber,\n    createdDate: types.string,\n    lastModifiedDate: types.string,\n    name: types.string,\n    logo: types.string,\n    rating: types.number,\n})\n\nconst Tournament = types.model('Tournament', {\n    id: types.identifierNumber,\n    date: types.string,\n    name: types.string,\n    logo: types.maybeNull(types.string),\n    bracketType: types.string,\n    totalTeams: types.number,\n    teams: types.array(Team),\n    bracket: types.array(Bracket),\n})\n\nconst Page = types.model('Page', {\n    size: types.number,\n    totalElements: types.number,\n    totalPages: types.number,\n    number: types.number,\n})\n\nconst PageableTeamStore = types.model('PageableTeamStore', {\n    teams: types.array(Team),\n    page: types.optional(Page, {\n        size: 0,\n        totalElements: 0,\n        totalPages: 0,\n        number: 0\n    }),\n    isLoading: false,\n})\n\nconst Checkbox = types.model('Checkbox', {\n    id: types.number,\n    value: types.string,\n    name: types.string,\n    checked: false\n}).actions(self => {\n    return {\n        handleClick() {\n            getParent(self, 2).cancel()\n            self.checked = !self.checked\n        }\n    }\n})\n\nconst Range = types.model('Range', {\n    min: 0,\n    max: 128\n}).actions(self => {\n    return {\n        setValue({min, max}) {\n            getParent(self, 1).cancel()\n            self.min = min\n            self.max = max\n        }\n    }\n})\n\nconst Filter = types.model('Filter', {\n    checkboxList: types.array(Checkbox),\n    range: types.maybe(Range),\n    isApplied: false,\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.checkboxList = []\n            self.range = {min: 0, max: 128}\n            self.isLoading = true\n            try {\n                self.checkboxList = yield apiCall.fetchTournamentTypes()\n                yield getParent(self, 1).load()\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        apply() {\n            self.isApplied = true\n        },\n        cancel() {\n            self.isApplied = false\n        },\n        afterCreate() {\n            self.load()\n        }\n    }\n})\n\nconst Search = types.model('Search', {\n    value: '',\n    isApplied: false,\n}).actions(self => {\n    return {\n        setValue(value) {\n            self.isApplied = false\n            self.value = value\n        },\n        apply() {\n            self.isApplied = true\n        }\n    }\n})\n\nconst PageableTournamentStore = types.model('PageableTournamentStore', {\n    tournaments: types.array(Tournament),\n    page: types.maybe(Page),\n    search: types.maybe(Search),\n    filter: types.optional(Filter, {\n        checkboxList: [],\n        range: {min: 0, max: 128},\n        isApplied: false,\n        isLoading: false,\n    }),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* (targetPage = 0) {\n            self.tournaments = []\n            self.isLoading = true\n            try {\n                const filters = {\n                    name: self.search.isApplied ? self.search.value : '',\n                }\n                if (self.filter.isApplied) {\n                    filters.types = self.filter.checkboxList.filter((el) => el.checked).map((el) => el.value)\n                    filters.range = {start: self.filter.range.min, end: self.filter.range.max}\n                }\n                const {tournaments, page} = yield apiCall.fetchUserTournamentsFilters(targetPage, 5, filters)\n                self.tournaments = tournaments\n                self.page = page\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        onNextPage: flow(function* () {\n            const targetPage = self.page.number + 1\n            if (targetPage < self.page.totalPages && !self.isLoading) {\n                yield self.load(targetPage)\n            }\n        }),\n        onPrevPage: flow(function* () {\n            const targetPage = self.page.number - 1\n            if (targetPage >= 0 && !self.isLoading) {\n                yield self.load(targetPage)\n            }\n        }),\n        afterCreate() {\n            self.page = {\n                size: 0,\n                totalElements: 0,\n                totalPages: 0,\n                number: 0\n            }\n            self.search = Search.create({})\n        }\n    }\n})\n\nconst PreviewTeamStore = types.model('PreviewTeamStore', {\n    teams: types.array(Team),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.teams = []\n            self.isLoading = true\n            try {\n                self.teams = yield apiCall.fetchUserTeams()\n            } finally {\n                self.isLoading = false\n            }\n        }),\n    }\n})\n\nconst PreviewTournamentStore = types.model('PreviewTournamentStore', {\n    tournaments: types.array(Tournament),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.tournaments = []\n            self.isLoading = true\n            try {\n                self.tournaments = yield apiCall.fetchUserTournaments()\n            } finally {\n                self.isLoading = false\n            }\n        }),\n    }\n})\n\nconst User = types.model('User', {\n    id: types.maybe(types.number),\n    createdDate: types.maybe(types.string),\n    username: types.maybe(types.string),\n    roles: types.array(types.string),\n    previewTournamentStore: PreviewTournamentStore,\n    previewTeamStore: PreviewTeamStore,\n    pageableTournamentStore: PageableTournamentStore,\n    pageableTeamStore: PageableTeamStore,\n})\n\nconst UserStore = types.model('UserStore', {\n    user: types.maybe(User),\n    isAuth: types.maybe(types.boolean),\n    isLoading: false,\n    isChecking: false\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.isLoading = true\n            try {\n                self.updateUserData(yield apiCall.fetchUserData())\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        signIn: flow(function* (login, password) {\n            self.isLoading = true\n            try {\n                const {user, isAuth} = yield apiCall.signIn(login, password)\n                self.updateUserData(user)\n                self.isAuth = isAuth\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        signUp: flow(function* (login, password) {\n            self.isLoading = true\n            try {\n                const {user, isAuth} = yield apiCall.signUp(login, password)\n                self.updateUserData(user)\n                self.isAuth = isAuth\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        checkSession: flow(function* () {\n            self.isChecking = true\n            try {\n                self.isAuth = yield apiCall.checkSession()\n            } finally {\n                self.isChecking = false\n            }\n        }),\n        signOut() {\n            self.isAuth = false\n            self.updateUserData({})\n            localStorage.setItem('token', '')\n        },\n        updateUserData(userData) {\n            self.user.id = userData.id\n            self.user.createdDate = userData.createdDate\n            self.user.username = userData.username\n            self.user.roles = userData.roles\n        },\n        afterCreate() {\n            self.checkSession()\n            self.user = {\n                previewTournamentStore: PreviewTournamentStore.create({}),\n                previewTeamStore: PreviewTeamStore.create({}),\n                pageableTournamentStore: PageableTournamentStore.create({}),\n                pageableTeamStore: PageableTeamStore.create({})\n            }\n        },\n    }\n})\n\nexport default UserStore;","import {flow, types} from \"mobx-state-tree\";\nimport apiCall from \"../http/api\";\n\nconst Tournament = types.model('Tournament', {\n    id: types.identifierNumber,\n    date: types.string,\n    name: types.string,\n    logo: types.maybeNull(types.string),\n    bracketType: types.string,\n    totalTeams: types.number,\n})\n\nconst Page = types.model('Page', {\n    size: types.number,\n    totalElements: types.number,\n    totalPages: types.number,\n    number: types.number\n})\n\nconst TournamentStore = types.model('TournamentStore', {\n    tournaments: types.optional(types.array(Tournament), []),\n    page: types.optional(Page, {\n        size: 0,\n        totalElements: 0,\n        totalPages: 0,\n        number: 0\n    }),\n    isLoading: false,\n}).actions(self => {\n    return {\n        load: flow(function* () {\n            self.isLoading = true\n            try {\n                const {tournaments, page} = yield apiCall.fetchPublicTournaments()\n                self.tournaments = tournaments\n                self.page = page\n            } finally {\n                self.isLoading = false\n            }\n        }),\n        onNextPage: flow(function* () {\n            const targetPage = self.page.number + 1\n            if (targetPage < self.page.totalPages && !self.isLoading) {\n                self.isLoading = true\n                try {\n                    const {tournaments, page} = yield apiCall.fetchPublicTournaments(targetPage)\n                    self.tournaments = tournaments\n                    self.page = page\n                } finally {\n                    self.isLoading = false\n                }\n            }\n        }),\n        onPrevPage: flow(function* () {\n            const targetPage = self.page.number - 1\n            if (targetPage >= 0 && !self.isLoading) {\n                self.isLoading = true\n                try {\n                    const {tournaments, page} = yield apiCall.fetchPublicTournaments(targetPage)\n                    self.tournaments = tournaments\n                    self.page = page\n                } finally {\n                    self.isLoading = false\n                }\n            }\n        }),\n        afterCreate() {\n            self.load()\n        },\n    }\n})\n\nexport default TournamentStore;","import {types} from \"mobx-state-tree\";\nimport UserStore from \"./user\";\nimport TournamentStore from \"./tournaments\";\n\nconst RootStore = types.model('RootStore', {\n    userStore: types.optional(UserStore, {}),\n    tournamentStore: types.optional(TournamentStore, {}),\n})\n\nexport default RootStore;","import './index.css';\n\nimport React, {createContext} from 'react';\nimport ReactDOM from 'react-dom';\nimport Modal from 'react-modal';\nimport App from './App';\nimport UserStore from \"./store/user-store\";\nimport TournamentStore from \"./store/tournament-store\";\nimport TeamStore from \"./store/team-store\";\nimport ModalDialog from \"./store/modal-dialog\";\nimport AlertStore from \"./store/alert-store\";\nimport RootStore from \"./store\";\n\nModal.setAppElement('#root')\n\nexport const store = RootStore.create({})\nexport const StoreContext = createContext(store)\n\nexport const Context = createContext(null)\nexport const globalStorage = {\n    userStore: new UserStore(),\n    alertStore: new AlertStore(),\n    signInModal: new ModalDialog(),\n    signUpModal: new ModalDialog(),\n    teamStore: new TeamStore(),\n    tournamentStore: new TournamentStore()\n}\n\nReactDOM.render(\n    <Context.Provider value={globalStorage}>\n        <StoreContext.Provider value={store}>\n            <App/>\n        </StoreContext.Provider>\n    </Context.Provider>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}